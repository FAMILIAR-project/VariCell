AllwaySync_Commercial_software = FM (Commercial_software :  [Mac] [Linux] Windows Onlinebackupservice Freewareversion Portable Detectconflict [Filelock] [Openfilesupport] [Revisioncontrol] [Detectrename] [Detectmove] [Fullduplextransfer] Propagatedeletes [Casesensitive] [Deltacopyingblockleveltransfer] [Opensource] [OtherOS] ; Onlinebackupservice : Viaotherproviders ; Freewareversion : Withlimits ; Commercial_software -> !Mac; Commercial_software -> !Linux; Commercial_software -> !Detectrename; Commercial_software -> !Detectmove; Commercial_software -> !Opensource; Commercial_software -> !OtherOS;  )
fm_AllwaySync = FM(File_Synchronization_Software : ID ; )
foreach(f in AllwaySync_*) do
insert f into fm_AllwaySync.File_Synchronization_Software with mand
end
removeFeature fm_AllwaySync.ID
removeVariable AllwaySync_Commercial_software

EasyComputerSync_Commercial_software = FM (Commercial_software :  [Mac] [Linux] Windows [Onlinebackupservice] [Freewareversion] [Portable] Detectconflict [Filelock] [Openfilesupport] [Revisioncontrol] [Detectrename] [Detectmove] [Fullduplextransfer] [Propagatedeletes] [Casesensitive] [Deltacopyingblockleveltransfer] [Opensource] [OtherOS] ; Commercial_software -> !Mac; Commercial_software -> !Linux; Commercial_software -> !Portable; Commercial_software -> !Opensource; Commercial_software -> !OtherOS;  )
fm_EasyComputerSync = FM(File_Synchronization_Software : ID ; )
foreach(f in EasyComputerSync_*) do
insert f into fm_EasyComputerSync.File_Synchronization_Software with mand
end
removeFeature fm_EasyComputerSync.ID
removeVariable EasyComputerSync_Commercial_software

Easy2SyncforFiles_Commercial_software = FM (Commercial_software :  [Mac] [Linux] Windows [Onlinebackupservice] Freewareversion [Portable] Detectconflict [Filelock] [Openfilesupport] Revisioncontrol Detectrename [Detectmove] [Fullduplextransfer] [Propagatedeletes] [Casesensitive] [Deltacopyingblockleveltransfer] [Opensource] [OtherOS] ; Detectrename : Forfolders ; Commercial_software -> !Mac; Commercial_software -> !Linux; Commercial_software -> !Opensource; Commercial_software -> !OtherOS;  )
fm_Easy2SyncforFiles = FM(File_Synchronization_Software : ID ; )
foreach(f in Easy2SyncforFiles_*) do
insert f into fm_Easy2SyncforFiles.File_Synchronization_Software with mand
end
removeFeature fm_Easy2SyncforFiles.ID
removeVariable Easy2SyncforFiles_Commercial_software

BestSync_Commercial_software = FM (Commercial_software :  [Mac] [Linux] Windows [Onlinebackupservice] Freewareversion Portable Detectconflict Filelock Openfilesupport Revisioncontrol Detectrename Detectmove Fullduplextransfer Propagatedeletes [Casesensitive] [Deltacopyingblockleveltransfer] [Opensource] [OtherOS] ; Commercial_software -> !Mac; Commercial_software -> !Linux; Commercial_software -> !Onlinebackupservice; Commercial_software -> !Opensource; Commercial_software -> !OtherOS;  )
fm_BestSync = FM(File_Synchronization_Software : ID ; )
foreach(f in BestSync_*) do
insert f into fm_BestSync.File_Synchronization_Software with mand
end
removeFeature fm_BestSync.ID
removeVariable BestSync_Commercial_software

DmailerSync_Commercial_software = FM (Commercial_software :  [Mac] [Linux] Windows Onlinebackupservice Freewareversion [Portable] [Detectconflict] [Filelock] [Openfilesupport] [Revisioncontrol] [Detectrename] [Detectmove] [Fullduplextransfer] [Propagatedeletes] [Casesensitive] [Deltacopyingblockleveltransfer] [Opensource] [OtherOS] ; Commercial_software -> !Mac; Commercial_software -> !Linux; Commercial_software -> !Opensource; Commercial_software -> !OtherOS;  )
fm_DmailerSync = FM(File_Synchronization_Software : ID ; )
foreach(f in DmailerSync_*) do
insert f into fm_DmailerSync.File_Synchronization_Software with mand
end
removeFeature fm_DmailerSync.ID
removeVariable DmailerSync_Commercial_software

GoodSync_Commercial_software = FM (Commercial_software :  Mac [Linux] Windows Onlinebackupservice Freewareversion Portable Detectconflict Filelock Openfilesupport Revisioncontrol Detectrename Detectmove Fullduplextransfer Propagatedeletes Casesensitive Deltacopyingblockleveltransfer [Opensource] [OtherOS] ; Commercial_software -> !Linux; Commercial_software -> !Opensource; Commercial_software -> !OtherOS;  )
fm_GoodSync = FM(File_Synchronization_Software : ID ; )
foreach(f in GoodSync_*) do
insert f into fm_GoodSync.File_Synchronization_Software with mand
end
removeFeature fm_GoodSync.ID
removeVariable GoodSync_Commercial_software

BackupAssist_Commercial_software = FM (Commercial_software :  [Mac] [Linux] Windows Onlinebackupservice [Freewareversion] [Portable] [Detectconflict] [Filelock] Openfilesupport [Revisioncontrol] [Detectrename] [Detectmove] [Fullduplextransfer] [Propagatedeletes] [Casesensitive] [Deltacopyingblockleveltransfer] [Opensource] [OtherOS] ; Onlinebackupservice : ViaRsync ; Commercial_software -> !Mac; Commercial_software -> !Linux; Commercial_software -> !Freewareversion; Commercial_software -> !Detectconflict; Commercial_software -> !Opensource; Commercial_software -> !OtherOS;  )
fm_BackupAssist = FM(File_Synchronization_Software : ID ; )
foreach(f in BackupAssist_*) do
insert f into fm_BackupAssist.File_Synchronization_Software with mand
end
removeFeature fm_BackupAssist.ID
removeVariable BackupAssist_Commercial_software

Egnyte_Commercial_software = FM (Commercial_software :  Mac Linux Windows Onlinebackupservice [Freewareversion] [Portable] Detectconflict Filelock [Openfilesupport] Revisioncontrol Detectrename Detectmove Fullduplextransfer Propagatedeletes Casesensitive [Deltacopyingblockleveltransfer] [Opensource] [OtherOS] ; Detectconflict : Handledbyversioning ; Casesensitive : Casepreserving ; OtherOS : (Android | IPad | IPhone) ; Commercial_software -> !Freewareversion; Commercial_software -> !Portable; Commercial_software -> !Openfilesupport; Commercial_software -> !Opensource;  )
fm_Egnyte = FM(File_Synchronization_Software : ID ; )
foreach(f in Egnyte_*) do
insert f into fm_Egnyte.File_Synchronization_Software with mand
end
removeFeature fm_Egnyte.ID
removeVariable Egnyte_Commercial_software

Broolz_Commercial_software = FM (Commercial_software :  Mac Linux Windows [Onlinebackupservice] Freewareversion [Portable] Detectconflict [Filelock] Openfilesupport Revisioncontrol Detectrename Detectmove Fullduplextransfer Propagatedeletes Casesensitive [Deltacopyingblockleveltransfer] [Opensource] [OtherOS] ; Freewareversion : Noncommercial ; Commercial_software -> !Onlinebackupservice; Commercial_software -> !Filelock; Commercial_software -> !Opensource; Commercial_software -> !OtherOS;  )
fm_Broolz = FM(File_Synchronization_Software : ID ; )
foreach(f in Broolz_*) do
insert f into fm_Broolz.File_Synchronization_Software with mand
end
removeFeature fm_Broolz.ID
removeVariable Broolz_Commercial_software

BestSyncFTP_Commercial_software = FM (Commercial_software :  [Mac] [Linux] Windows [Onlinebackupservice] Freewareversion Portable Detectconflict Filelock Openfilesupport Revisioncontrol Detectrename Detectmove Fullduplextransfer Propagatedeletes [Casesensitive] [Deltacopyingblockleveltransfer] [Opensource] [OtherOS] ; Commercial_software -> !Mac; Commercial_software -> !Linux; Commercial_software -> !Onlinebackupservice; Commercial_software -> !Opensource; Commercial_software -> !OtherOS;  )
fm_BestSyncFTP = FM(File_Synchronization_Software : ID ; )
foreach(f in BestSyncFTP_*) do
insert f into fm_BestSyncFTP.File_Synchronization_Software with mand
end
removeFeature fm_BestSyncFTP.ID
removeVariable BestSyncFTP_Commercial_software

FileReplicationPro_Commercial_software = FM (Commercial_software :  Mac Linux Windows [Onlinebackupservice] [Freewareversion] [Portable] [Detectconflict] Filelock Openfilesupport [Revisioncontrol] [Detectrename] Detectmove [Fullduplextransfer] [Propagatedeletes] [Casesensitive] Deltacopyingblockleveltransfer [Opensource] [OtherOS] ; OtherOS : (AIX | BSD | HPUX | Netware | Solaris | Unix) ; Commercial_software -> !Onlinebackupservice; Commercial_software -> !Freewareversion; Commercial_software -> !Portable; Commercial_software -> !Opensource;  )
fm_FileReplicationPro = FM(File_Synchronization_Software : ID ; )
foreach(f in FileReplicationPro_*) do
insert f into fm_FileReplicationPro.File_Synchronization_Software with mand
end
removeFeature fm_FileReplicationPro.ID
removeVariable FileReplicationPro_Commercial_software

AIMstor_Commercial_software = FM (Commercial_software :  [Mac] [Linux] Windows [Onlinebackupservice] Freewareversion Portable Detectconflict Filelock Openfilesupport Revisioncontrol Detectrename Detectmove Fullduplextransfer Propagatedeletes Casesensitive [Deltacopyingblockleveltransfer] [Opensource] [OtherOS] ; Freewareversion : Withlimits ; Revisioncontrol : ThroughVSS ; Casesensitive : Casepreserving ; Commercial_software -> !Mac; Commercial_software -> !Linux; Commercial_software -> !Onlinebackupservice; Commercial_software -> !Opensource; Commercial_software -> !OtherOS;  )
fm_AIMstor = FM(File_Synchronization_Software : ID ; )
foreach(f in AIMstor_*) do
insert f into fm_AIMstor.File_Synchronization_Software with mand
end
removeFeature fm_AIMstor.ID
removeVariable AIMstor_Commercial_software

DistributedStorage_Commercial_software = FM (Commercial_software :  [Mac] Linux Windows Onlinebackupservice [Freewareversion] [Portable] Detectconflict Filelock Openfilesupport [Revisioncontrol] [Detectrename] [Detectmove] [Fullduplextransfer] [Propagatedeletes] [Casesensitive] [Deltacopyingblockleveltransfer] [Opensource] [OtherOS] ; Onlinebackupservice : Viaotherproviders ; Commercial_software -> !Mac; Commercial_software -> !Freewareversion; Commercial_software -> !Opensource; Commercial_software -> !OtherOS;  )
fm_DistributedStorage = FM(File_Synchronization_Software : ID ; )
foreach(f in DistributedStorage_*) do
insert f into fm_DistributedStorage.File_Synchronization_Software with mand
end
removeFeature fm_DistributedStorage.ID
removeVariable DistributedStorage_Commercial_software

BoxSync_Commercial_software = FM (Commercial_software :  [Mac] [Linux] Windows Onlinebackupservice [Freewareversion] [Portable] Detectconflict [Filelock] [Openfilesupport] Revisioncontrol [Detectrename] [Detectmove] [Fullduplextransfer] Propagatedeletes [Casesensitive] [Deltacopyingblockleveltransfer] [Opensource] OtherOS ; Commercial_software -> !Opensource;  )
fm_BoxSync = FM(File_Synchronization_Software : ID ; )
foreach(f in BoxSync_*) do
insert f into fm_BoxSync.File_Synchronization_Software with mand
end
removeFeature fm_BoxSync.ID
removeVariable BoxSync_Commercial_software

Backup4all_Commercial_software = FM (Commercial_software :  [Mac] [Linux] Windows [Onlinebackupservice] Freewareversion Portable [Detectconflict] [Filelock] Openfilesupport Revisioncontrol [Detectrename] [Detectmove] [Fullduplextransfer] Propagatedeletes [Casesensitive] [Deltacopyingblockleveltransfer] [Opensource] [OtherOS] ; Commercial_software -> !Mac; Commercial_software -> !Linux; Commercial_software -> !Detectconflict; Commercial_software -> !Opensource; Commercial_software -> !OtherOS;  )
fm_Backup4all = FM(File_Synchronization_Software : ID ; )
foreach(f in Backup4all_*) do
insert f into fm_Backup4all.File_Synchronization_Software with mand
end
removeFeature fm_Backup4all.ID
removeVariable Backup4all_Commercial_software

finalFM = merge sunion fm_*
