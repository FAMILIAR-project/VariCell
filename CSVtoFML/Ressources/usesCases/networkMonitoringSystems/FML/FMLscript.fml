Zabbix_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending [TrendPrediction] AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : FullControl ; License : GPL ; DataStorageMethod : OracleMySQLPostgreSQLIBMDB2SQLite ; General_features -> !TrendPrediction;  )
fm_Zabbix = FM(Network_Monitoring_Systems : ID ; )
foreach(f in Zabbix_*) do
insert f into fm_Zabbix.Network_Monitoring_Systems with mand
end
removeFeature fm_Zabbix.ID
removeVariable Zabbix_General_features

NetQoSPerformanceCenter_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending TrendPrediction AutoDiscovery [Agent] SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl [IPv6] WebApp License DataStorageMethod ; WebApp : ViewingAcknowledgingReporting ; License : Commercial ; General_features -> !Agent;  )
fm_NetQoSPerformanceCenter = FM(Network_Monitoring_Systems : ID ; )
foreach(f in NetQoSPerformanceCenter_*) do
insert f into fm_NetQoSPerformanceCenter.Network_Monitoring_Systems with mand
end
removeFeature fm_NetQoSPerformanceCenter.ID
removeVariable NetQoSPerformanceCenter_General_features

WhatsUpGold_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending [TrendPrediction] AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : FullControl ; License : Commercial ; DataStorageMethod : SQL ; General_features -> !TrendPrediction;  )
fm_WhatsUpGold = FM(Network_Monitoring_Systems : ID ; )
foreach(f in WhatsUpGold_*) do
insert f into fm_WhatsUpGold.Network_Monitoring_Systems with mand
end
removeFeature fm_WhatsUpGold.ID
removeVariable WhatsUpGold_General_features

PandoraFMS_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending TrendPrediction AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : FullControl ; License : GPLv2 ; DataStorageMethod : MySQLPostgreSQLOracle ;  )
fm_PandoraFMS = FM(Network_Monitoring_Systems : ID ; )
foreach(f in PandoraFMS_*) do
insert f into fm_PandoraFMS.Network_Monitoring_Systems with mand
end
removeFeature fm_PandoraFMS.ID
removeVariable PandoraFMS_General_features

AdRemNetCrunch_General_features = FM (General_features :  [IPSLAReports] LogicalGrouping Trending [TrendPrediction] AutoDiscovery [Agent] SNMP Syslog Plugins Triggers_Alerts [DistributedMonitoring] Inventory Maps AccessControl [IPv6] WebApp License DataStorageMethod ; WebApp : ViewingAcknowledging ; License : Commercial ; DataStorageMethod : SQL ; General_features -> !IPSLAReports; General_features -> !TrendPrediction; General_features -> !Agent; General_features -> !DistributedMonitoring;  )
fm_AdRemNetCrunch = FM(Network_Monitoring_Systems : ID ; )
foreach(f in AdRemNetCrunch_*) do
insert f into fm_AdRemNetCrunch.Network_Monitoring_Systems with mand
end
removeFeature fm_AdRemNetCrunch.ID
removeVariable AdRemNetCrunch_General_features

Xymon_Hobbit_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending [TrendPrediction] [AutoDiscovery] Agent [SNMP] [Syslog] Plugins Triggers_Alerts DistributedMonitoring [Inventory] [Maps] AccessControl [IPv6] WebApp License DataStorageMethod ; AccessControl : ApacheACL ; WebApp : ViewingAcknowledging ; License : GPL ; DataStorageMethod : Flatfile ; General_features -> !TrendPrediction; General_features -> !AutoDiscovery; General_features -> !Syslog; General_features -> !Inventory; General_features -> !Maps; General_features -> !IPv6;  )
fm_Xymon_Hobbit = FM(Network_Monitoring_Systems : ID ; )
foreach(f in Xymon_Hobbit_*) do
insert f into fm_Xymon_Hobbit.Network_Monitoring_Systems with mand
end
removeFeature fm_Xymon_Hobbit.ID
removeVariable Xymon_Hobbit_General_features

Cacti_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending TrendPrediction [AutoDiscovery] [Agent] SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory [Maps] AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : FullControl ; License : GPL ; DataStorageMethod : RRDtoolMySQL ; General_features -> !Agent;  )
fm_Cacti = FM(Network_Monitoring_Systems : ID ; )
foreach(f in Cacti_*) do
insert f into fm_Cacti.Network_Monitoring_Systems with mand
end
removeFeature fm_Cacti.ID
removeVariable Cacti_General_features

PacketTrap_General_features = FM (General_features :  [IPSLAReports] LogicalGrouping Trending [TrendPrediction] AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring [Inventory] [Maps] [AccessControl] [IPv6] WebApp License DataStorageMethod ; WebApp : ViewingReporting ; License : Commercial ; DataStorageMethod : SQL ; General_features -> !IPSLAReports;  )
fm_PacketTrap = FM(Network_Monitoring_Systems : ID ; )
foreach(f in PacketTrap_*) do
insert f into fm_PacketTrap.Network_Monitoring_Systems with mand
end
removeFeature fm_PacketTrap.ID
removeVariable PacketTrap_General_features

Scrutinizer_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending [TrendPrediction] [AutoDiscovery] [Agent] SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : ViewingAcknowledgingReporting ; License : LimitedfreeCommercial ; DataStorageMethod : MySQL ; General_features -> !TrendPrediction; General_features -> !AutoDiscovery; General_features -> !Agent;  )
fm_Scrutinizer = FM(Network_Monitoring_Systems : ID ; )
foreach(f in Scrutinizer_*) do
insert f into fm_Scrutinizer.Network_Monitoring_Systems with mand
end
removeFeature fm_Scrutinizer.ID
removeVariable Scrutinizer_General_features

PerformanceCoPilot_General_features = FM (General_features :  [IPSLAReports] LogicalGrouping Trending [TrendPrediction] [AutoDiscovery] Agent [SNMP] [Syslog] Plugins Triggers_Alerts DistributedMonitoring [Inventory] [Maps] [AccessControl] [IPv6] [WebApp] License DataStorageMethod ; License : GPLLGPL ; DataStorageMethod : Flatfile ; General_features -> !IPSLAReports; General_features -> !TrendPrediction; General_features -> !AutoDiscovery; General_features -> !SNMP; General_features -> !Syslog; General_features -> !Inventory; General_features -> !Maps; General_features -> !AccessControl; General_features -> !WebApp;  )
fm_PerformanceCoPilot = FM(Network_Monitoring_Systems : ID ; )
foreach(f in PerformanceCoPilot_*) do
insert f into fm_PerformanceCoPilot.Network_Monitoring_Systems with mand
end
removeFeature fm_PerformanceCoPilot.ID
removeVariable PerformanceCoPilot_General_features

OpenKBM_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending TrendPrediction AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl IPv6 WebApp License DataStorageMethod ; License : Commercial ; DataStorageMethod : ProprietarywithJDBCsupport ;  )
fm_OpenKBM = FM(Network_Monitoring_Systems : ID ; )
foreach(f in OpenKBM_*) do
insert f into fm_OpenKBM.Network_Monitoring_Systems with mand
end
removeFeature fm_OpenKBM.ID
removeVariable OpenKBM_General_features

InterMapper_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending [TrendPrediction] AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : Viewing ; License : LimitedfreeCommercial ; DataStorageMethod : PostgreSQL ; General_features -> !TrendPrediction;  )
fm_InterMapper = FM(Network_Monitoring_Systems : ID ; )
foreach(f in InterMapper_*) do
insert f into fm_InterMapper.Network_Monitoring_Systems with mand
end
removeFeature fm_InterMapper.ID
removeVariable InterMapper_General_features

OPNETsAppResponseXpert_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending TrendPrediction AutoDiscovery [Agent] SNMP [Syslog] Plugins Triggers_Alerts DistributedMonitoring [Inventory] Maps AccessControl [IPv6] WebApp License DataStorageMethod ; WebApp : ViewingAcknowledgingReporting ; License : Commercial ; General_features -> !Agent; General_features -> !Syslog; General_features -> !Inventory;  )
fm_OPNETsAppResponseXpert = FM(Network_Monitoring_Systems : ID ; )
foreach(f in OPNETsAppResponseXpert_*) do
insert f into fm_OPNETsAppResponseXpert.Network_Monitoring_Systems with mand
end
removeFeature fm_OPNETsAppResponseXpert.ID
removeVariable OPNETsAppResponseXpert_General_features

ServersCheck_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending [TrendPrediction] AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring [Inventory] Maps AccessControl [IPv6] WebApp License DataStorageMethod ; WebApp : FullControl ; License : Commercial ; DataStorageMethod : FlatfileODBC ; General_features -> !TrendPrediction; General_features -> !Inventory;  )
fm_ServersCheck = FM(Network_Monitoring_Systems : ID ; )
foreach(f in ServersCheck_*) do
insert f into fm_ServersCheck.Network_Monitoring_Systems with mand
end
removeFeature fm_ServersCheck.ID
removeVariable ServersCheck_General_features

AggreGateNetworkManager_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending TrendPrediction AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl [IPv6] WebApp License DataStorageMethod ; WebApp : FullControl ; License : LimitedfreeCommercial ; DataStorageMethod : MySQLMSSQLPostgreSQLOracleFirebirdHSQLDB ;  )
fm_AggreGateNetworkManager = FM(Network_Monitoring_Systems : ID ; )
foreach(f in AggreGateNetworkManager_*) do
insert f into fm_AggreGateNetworkManager.Network_Monitoring_Systems with mand
end
removeFeature fm_AggreGateNetworkManager.ID
removeVariable AggreGateNetworkManager_General_features

HPNetworkNodeManagerNNMi_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending TrendPrediction AutoDiscovery [Agent] SNMP [Syslog] Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : FullControl ; License : Commercial ; DataStorageMethod : PostgreSQLOracleDatabase ; General_features -> !Agent; General_features -> !Syslog;  )
fm_HPNetworkNodeManagerNNMi = FM(Network_Monitoring_Systems : ID ; )
foreach(f in HPNetworkNodeManagerNNMi_*) do
insert f into fm_HPNetworkNodeManagerNNMi.Network_Monitoring_Systems with mand
end
removeFeature fm_HPNetworkNodeManagerNNMi.ID
removeVariable HPNetworkNodeManagerNNMi_General_features

TclMon_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending [TrendPrediction] AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts [DistributedMonitoring] [Inventory] Maps AccessControl [IPv6] WebApp License DataStorageMethod ; WebApp : Viewing ; License : BSD ; DataStorageMethod : RRDTool ; General_features -> !TrendPrediction; General_features -> !DistributedMonitoring; General_features -> !Inventory; General_features -> !IPv6;  )
fm_TclMon = FM(Network_Monitoring_Systems : ID ; )
foreach(f in TclMon_*) do
insert f into fm_TclMon.Network_Monitoring_Systems with mand
end
removeFeature fm_TclMon.ID
removeVariable TclMon_General_features

Munin_General_features = FM (General_features :  [IPSLAReports] [LogicalGrouping] Trending TrendPrediction [AutoDiscovery] Agent SNMP [Syslog] Plugins [Triggers_Alerts] [DistributedMonitoring] [Inventory] [Maps] [AccessControl] IPv6 WebApp License DataStorageMethod ; WebApp : Viewing ; License : GPL ; DataStorageMethod : RRDtool ; General_features -> !IPSLAReports; General_features -> !LogicalGrouping; General_features -> !AutoDiscovery; General_features -> !Syslog;  )
fm_Munin = FM(Network_Monitoring_Systems : ID ; )
foreach(f in Munin_*) do
insert f into fm_Munin.Network_Monitoring_Systems with mand
end
removeFeature fm_Munin.ID
removeVariable Munin_General_features

Shinken_General_features = FM (General_features :  [IPSLAReports] LogicalGrouping Trending [TrendPrediction] [AutoDiscovery] Agent [SNMP] [Syslog] Plugins Triggers_Alerts DistributedMonitoring [Inventory] Maps [AccessControl] [IPv6] WebApp License DataStorageMethod ; WebApp : ViewingAcknowledgingReporting ; License : AGPL ; DataStorageMethod : FlatfileMySQLOracleCouchDBSqlite ; General_features -> !TrendPrediction; General_features -> !AccessControl;  )
fm_Shinken = FM(Network_Monitoring_Systems : ID ; )
foreach(f in Shinken_*) do
insert f into fm_Shinken.Network_Monitoring_Systems with mand
end
removeFeature fm_Shinken.ID
removeVariable Shinken_General_features

DopplerVUE_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending [TrendPrediction] AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : FullControl ; License : Commercial ; DataStorageMethod : MSSQL ; General_features -> !TrendPrediction;  )
fm_DopplerVUE = FM(Network_Monitoring_Systems : ID ; )
foreach(f in DopplerVUE_*) do
insert f into fm_DopplerVUE.Network_Monitoring_Systems with mand
end
removeFeature fm_DopplerVUE.ID
removeVariable DopplerVUE_General_features

IsyVmon_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending [TrendPrediction] [AutoDiscovery] Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring [Inventory] [Maps] AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : FullControl ; License : LimitedfreeCommercial ; DataStorageMethod : RRDtoolMySQL ; General_features -> !TrendPrediction;  )
fm_IsyVmon = FM(Network_Monitoring_Systems : ID ; )
foreach(f in IsyVmon_*) do
insert f into fm_IsyVmon.Network_Monitoring_Systems with mand
end
removeFeature fm_IsyVmon.ID
removeVariable IsyVmon_General_features

IBMTivoliNetworkManager_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending TrendPrediction AutoDiscovery [Agent] SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl IPv6 WebApp License DataStorageMethod ; IPSLAReports : Viaconfiguration ; License : Commercial ; DataStorageMethod : MySQLOracleDatabaseDB2 ; General_features -> !Agent;  )
fm_IBMTivoliNetworkManager = FM(Network_Monitoring_Systems : ID ; )
foreach(f in IBMTivoliNetworkManager_*) do
insert f into fm_IBMTivoliNetworkManager.Network_Monitoring_Systems with mand
end
removeFeature fm_IBMTivoliNetworkManager.ID
removeVariable IBMTivoliNetworkManager_General_features

SevOne_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending TrendPrediction AutoDiscovery [Agent] SNMP [Syslog] Plugins Triggers_Alerts DistributedMonitoring [Inventory] Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : FullControl ; License : Commercial ; DataStorageMethod : MySQL ; General_features -> !Agent; General_features -> !Syslog;  )
fm_SevOne = FM(Network_Monitoring_Systems : ID ; )
foreach(f in SevOne_*) do
insert f into fm_SevOne.Network_Monitoring_Systems with mand
end
removeFeature fm_SevOne.ID
removeVariable SevOne_General_features

VeraxNMS_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending TrendPrediction AutoDiscovery [Agent] SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring [Inventory] Maps AccessControl [IPv6] WebApp License DataStorageMethod ; WebApp : FullControl ; License : Commercial ; DataStorageMethod : OracleMySQL ; General_features -> !Agent; General_features -> !Inventory;  )
fm_VeraxNMS = FM(Network_Monitoring_Systems : ID ; )
foreach(f in VeraxNMS_*) do
insert f into fm_VeraxNMS.Network_Monitoring_Systems with mand
end
removeFeature fm_VeraxNMS.ID
removeVariable VeraxNMS_General_features

Nagios_General_features = FM (General_features :  [IPSLAReports] LogicalGrouping Trending [TrendPrediction] [AutoDiscovery] Agent [SNMP] [Syslog] Plugins Triggers_Alerts DistributedMonitoring [Inventory] Maps AccessControl IPv6 WebApp License DataStorageMethod ; License : GPL ; DataStorageMethod : FlatfileSQL ; General_features -> !TrendPrediction;  )
fm_Nagios = FM(Network_Monitoring_Systems : ID ; )
foreach(f in Nagios_*) do
insert f into fm_Nagios.Network_Monitoring_Systems with mand
end
removeFeature fm_Nagios.ID
removeVariable Nagios_General_features

KaseyaNetworkMonitor_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending [TrendPrediction] AutoDiscovery [Agent] SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl [IPv6] WebApp License DataStorageMethod ; WebApp : FullControl ; License : Commercial ; DataStorageMethod : FirebirdSQL ; General_features -> !TrendPrediction; General_features -> !Agent;  )
fm_KaseyaNetworkMonitor = FM(Network_Monitoring_Systems : ID ; )
foreach(f in KaseyaNetworkMonitor_*) do
insert f into fm_KaseyaNetworkMonitor.Network_Monitoring_Systems with mand
end
removeFeature fm_KaseyaNetworkMonitor.ID
removeVariable KaseyaNetworkMonitor_General_features

PRTGNetworkMonitor_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending TrendPrediction AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : FullControl ; License : FreewareCommercial ; DataStorageMethod : Proprietary ;  )
fm_PRTGNetworkMonitor = FM(Network_Monitoring_Systems : ID ; )
foreach(f in PRTGNetworkMonitor_*) do
insert f into fm_PRTGNetworkMonitor.Network_Monitoring_Systems with mand
end
removeFeature fm_PRTGNetworkMonitor.ID
removeVariable PRTGNetworkMonitor_General_features

AccelOps_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending TrendPrediction AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl [IPv6] WebApp License DataStorageMethod ; WebApp : FullControl ; License : Commercial ; DataStorageMethod : PostgreSQL ;  )
fm_AccelOps = FM(Network_Monitoring_Systems : ID ; )
foreach(f in AccelOps_*) do
insert f into fm_AccelOps.Network_Monitoring_Systems with mand
end
removeFeature fm_AccelOps.ID
removeVariable AccelOps_General_features

LiveAction_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending [TrendPrediction] AutoDiscovery [Agent] SNMP [Syslog] Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : ViewingReporting ; License : Commercial ; General_features -> !TrendPrediction; General_features -> !Agent; General_features -> !Syslog;  )
fm_LiveAction = FM(Network_Monitoring_Systems : ID ; )
foreach(f in LiveAction_*) do
insert f into fm_LiveAction.Network_Monitoring_Systems with mand
end
removeFeature fm_LiveAction.ID
removeVariable LiveAction_General_features

Argus_General_features = FM (General_features :  IPSLAReports LogicalGrouping [Trending] [TrendPrediction] [AutoDiscovery] Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring [Inventory] [Maps] AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : ViewingAcknowledging ; License : ArtisticLicense ; DataStorageMethod : BerkeleyDB ; General_features -> !Trending; General_features -> !TrendPrediction; General_features -> !AutoDiscovery; General_features -> !Maps;  )
fm_Argus = FM(Network_Monitoring_Systems : ID ; )
foreach(f in Argus_*) do
insert f into fm_Argus.Network_Monitoring_Systems with mand
end
removeFeature fm_Argus.ID
removeVariable Argus_General_features

NagiosXI_General_features = FM (General_features :  [IPSLAReports] LogicalGrouping Trending [TrendPrediction] [AutoDiscovery] Agent [SNMP] [Syslog] Plugins Triggers_Alerts DistributedMonitoring [Inventory] Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : FullControl ; License : Commercial ; DataStorageMethod : MySQLPostgreSQL ; General_features -> !TrendPrediction;  )
fm_NagiosXI = FM(Network_Monitoring_Systems : ID ; )
foreach(f in NagiosXI_*) do
insert f into fm_NagiosXI.Network_Monitoring_Systems with mand
end
removeFeature fm_NagiosXI.ID
removeVariable NagiosXI_General_features

Icinga_General_features = FM (General_features :  [IPSLAReports] LogicalGrouping Trending [TrendPrediction] [AutoDiscovery] Agent [SNMP] [Syslog] Plugins Triggers_Alerts DistributedMonitoring [Inventory] Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : FullControl ; License : GPL ; DataStorageMethod : MySQLPostgreSQLOracleDatabase ; General_features -> !TrendPrediction;  )
fm_Icinga = FM(Network_Monitoring_Systems : ID ; )
foreach(f in Icinga_*) do
insert f into fm_Icinga.Network_Monitoring_Systems with mand
end
removeFeature fm_Icinga.ID
removeVariable Icinga_General_features

OpenNMS_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending [TrendPrediction] AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : FullControl ; License : GPLv3 ; DataStorageMethod : JRobinPostgreSQL ;  )
fm_OpenNMS = FM(Network_Monitoring_Systems : ID ; )
foreach(f in OpenNMS_*) do
insert f into fm_OpenNMS.Network_Monitoring_Systems with mand
end
removeFeature fm_OpenNMS.ID
removeVariable OpenNMS_General_features

AvayaVPFM_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending [TrendPrediction] AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : FullControl ; License : Commercial ; DataStorageMethod : MySQL ; General_features -> !TrendPrediction;  )
fm_AvayaVPFM = FM(Network_Monitoring_Systems : ID ; )
foreach(f in AvayaVPFM_*) do
insert f into fm_AvayaVPFM.Network_Monitoring_Systems with mand
end
removeFeature fm_AvayaVPFM.ID
removeVariable AvayaVPFM_General_features

NetworkInstrumentsObserverInfrastructure_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending TrendPrediction AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : FullControl ; License : Commercial ; DataStorageMethod : ProprietaryDatabase ;  )
fm_NetworkInstrumentsObserverInfrastructure = FM(Network_Monitoring_Systems : ID ; )
foreach(f in NetworkInstrumentsObserverInfrastructure_*) do
insert f into fm_NetworkInstrumentsObserverInfrastructure.Network_Monitoring_Systems with mand
end
removeFeature fm_NetworkInstrumentsObserverInfrastructure.ID
removeVariable NetworkInstrumentsObserverInfrastructure_General_features

Opsview_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending [TrendPrediction] AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring [Inventory] Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : FullControl ; License : GPL ; DataStorageMethod : SQL ; General_features -> !TrendPrediction; General_features -> !Inventory;  )
fm_Opsview = FM(Network_Monitoring_Systems : ID ; )
foreach(f in Opsview_*) do
insert f into fm_Opsview.Network_Monitoring_Systems with mand
end
removeFeature fm_Opsview.ID
removeVariable Opsview_General_features

NetXMS_General_features = FM (General_features :  [IPSLAReports] LogicalGrouping Trending TrendPrediction AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring [Inventory] Maps AccessControl [IPv6] WebApp License DataStorageMethod ; WebApp : FullControl ; License : GPL ; DataStorageMethod : MySQLMSSQLOraclePostgreSQLSQLite ; General_features -> !IPSLAReports; General_features -> !Inventory; General_features -> !IPv6;  )
fm_NetXMS = FM(Network_Monitoring_Systems : ID ; )
foreach(f in NetXMS_*) do
insert f into fm_NetXMS.Network_Monitoring_Systems with mand
end
removeFeature fm_NetXMS.ID
removeVariable NetXMS_General_features

ExtraHop_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending [TrendPrediction] AutoDiscovery [Agent] SNMP [Syslog] [Plugins] Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl IPv6 WebApp License DataStorageMethod ; DistributedMonitoring : WithAggregator ; WebApp : FullControl ; License : Commercial ; DataStorageMethod : Proprietary ; General_features -> !TrendPrediction; General_features -> !Syslog; General_features -> !Plugins;  )
fm_ExtraHop = FM(Network_Monitoring_Systems : ID ; )
foreach(f in ExtraHop_*) do
insert f into fm_ExtraHop.Network_Monitoring_Systems with mand
end
removeFeature fm_ExtraHop.ID
removeVariable ExtraHop_General_features

IPHostNetworkMonitor_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending [TrendPrediction] AutoDiscovery Agent SNMP [Syslog] Plugins Triggers_Alerts DistributedMonitoring [Inventory] [Maps] [AccessControl] [IPv6] WebApp License DataStorageMethod ; WebApp : ViewingAcknowledgingReporting ; License : Commercial ; DataStorageMethod : FirebirdSQL ; General_features -> !TrendPrediction; General_features -> !Syslog; General_features -> !Inventory; General_features -> !Maps; General_features -> !AccessControl;  )
fm_IPHostNetworkMonitor = FM(Network_Monitoring_Systems : ID ; )
foreach(f in IPHostNetworkMonitor_*) do
insert f into fm_IPHostNetworkMonitor.Network_Monitoring_Systems with mand
end
removeFeature fm_IPHostNetworkMonitor.ID
removeVariable IPHostNetworkMonitor_General_features

NimsoftMonitoringSolution_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending TrendPrediction AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl [IPv6] WebApp License DataStorageMethod ; WebApp : ViewingAcknowledgingReporting ; License : Commercial ; DataStorageMethod : SQL ;  )
fm_NimsoftMonitoringSolution = FM(Network_Monitoring_Systems : ID ; )
foreach(f in NimsoftMonitoringSolution_*) do
insert f into fm_NimsoftMonitoringSolution.Network_Monitoring_Systems with mand
end
removeFeature fm_NimsoftMonitoringSolution.ID
removeVariable NimsoftMonitoringSolution_General_features

Observium_General_features = FM (General_features :  [IPSLAReports] [LogicalGrouping] [Trending] [TrendPrediction] AutoDiscovery [Agent] SNMP Syslog [Plugins] Triggers_Alerts [DistributedMonitoring] Inventory Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : FullControl ; License : GPLv3 ; DataStorageMethod : RRDtoolMySQL ; General_features -> !IPSLAReports; General_features -> !LogicalGrouping; General_features -> !Trending; General_features -> !TrendPrediction; General_features -> !Agent; General_features -> !Plugins; General_features -> !DistributedMonitoring;  )
fm_Observium = FM(Network_Monitoring_Systems : ID ; )
foreach(f in Observium_*) do
insert f into fm_Observium.Network_Monitoring_Systems with mand
end
removeFeature fm_Observium.ID
removeVariable Observium_General_features

FreeNATS_General_features = FM (General_features :  IPSLAReports LogicalGrouping [Trending] [TrendPrediction] AutoDiscovery Agent [SNMP] [Syslog] Plugins Triggers_Alerts [DistributedMonitoring] [Inventory] [Maps] AccessControl [IPv6] WebApp License DataStorageMethod ; Triggers_Alerts : InPHPCode ; WebApp : FullControl ; License : GPL ; DataStorageMethod : MySQL ; General_features -> !Trending; General_features -> !TrendPrediction; General_features -> !SNMP; General_features -> !DistributedMonitoring; General_features -> !Inventory; General_features -> !Maps;  )
fm_FreeNATS = FM(Network_Monitoring_Systems : ID ; )
foreach(f in FreeNATS_*) do
insert f into fm_FreeNATS.Network_Monitoring_Systems with mand
end
removeFeature fm_FreeNATS.ID
removeVariable FreeNATS_General_features

ZyrionTraverse_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending TrendPrediction AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl [IPv6] WebApp License DataStorageMethod ; WebApp : FullControl ; License : Commercial ; DataStorageMethod : SQL ;  )
fm_ZyrionTraverse = FM(Network_Monitoring_Systems : ID ; )
foreach(f in ZyrionTraverse_*) do
insert f into fm_ZyrionTraverse.Network_Monitoring_Systems with mand
end
removeFeature fm_ZyrionTraverse.ID
removeVariable ZyrionTraverse_General_features

DhyanNetworkmanagementSystem_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending [TrendPrediction] AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : FullControl ; License : Commercial ; DataStorageMethod : MySQLOracleDerby ;  )
fm_DhyanNetworkmanagementSystem = FM(Network_Monitoring_Systems : ID ; )
foreach(f in DhyanNetworkmanagementSystem_*) do
insert f into fm_DhyanNetworkmanagementSystem.Network_Monitoring_Systems with mand
end
removeFeature fm_DhyanNetworkmanagementSystem.ID
removeVariable DhyanNetworkmanagementSystem_General_features

Spiceworks_General_features = FM (General_features :  [IPSLAReports] LogicalGrouping Trending [TrendPrediction] AutoDiscovery Agent SNMP [Syslog] Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl [IPv6] WebApp License DataStorageMethod ; WebApp : FullControl ; License : Commercial ; DataStorageMethod : Sqlite ; General_features -> !IPSLAReports; General_features -> !TrendPrediction; General_features -> !Syslog; General_features -> !IPv6;  )
fm_Spiceworks = FM(Network_Monitoring_Systems : ID ; )
foreach(f in Spiceworks_*) do
insert f into fm_Spiceworks.Network_Monitoring_Systems with mand
end
removeFeature fm_Spiceworks.ID
removeVariable Spiceworks_General_features

NetMRG_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending TrendPrediction [AutoDiscovery] [Agent] SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl [IPv6] WebApp License DataStorageMethod ; WebApp : Fullcontrol ; License : GPL ; DataStorageMethod : RRDtoolMySQL ; General_features -> !Agent;  )
fm_NetMRG = FM(Network_Monitoring_Systems : ID ; )
foreach(f in NetMRG_*) do
insert f into fm_NetMRG.Network_Monitoring_Systems with mand
end
removeFeature fm_NetMRG.ID
removeVariable NetMRG_General_features

Orion_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending TrendPrediction AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : FullControl ; License : Commercial ; DataStorageMethod : SQL ;  )
fm_Orion = FM(Network_Monitoring_Systems : ID ; )
foreach(f in Orion_*) do
insert f into fm_Orion.Network_Monitoring_Systems with mand
end
removeFeature fm_Orion.ID
removeVariable Orion_General_features

Zenoss_General_features = FM (General_features :  IPSLAReports LogicalGrouping Trending TrendPrediction AutoDiscovery [Agent] SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring Inventory Maps AccessControl IPv6 WebApp License DataStorageMethod ; WebApp : FullControl ; License : GPL ; DataStorageMethod : ZODBMySQLRRDtool ; General_features -> !Agent;  )
fm_Zenoss = FM(Network_Monitoring_Systems : ID ; )
foreach(f in Zenoss_*) do
insert f into fm_Zenoss.Network_Monitoring_Systems with mand
end
removeFeature fm_Zenoss.ID
removeVariable Zenoss_General_features

Collectd_General_features = FM (General_features :  [IPSLAReports] [LogicalGrouping] [Trending] [TrendPrediction] AutoDiscovery Agent SNMP Syslog Plugins Triggers_Alerts DistributedMonitoring [Inventory] [Maps] AccessControl IPv6 WebApp License DataStorageMethod ; AutoDiscovery : Pushmodelmulticastpossible ; AccessControl : ApacheACL ; WebApp : Viewing ; License : GPLv2 ; DataStorageMethod : RRDtool ; General_features -> !IPSLAReports; General_features -> !LogicalGrouping; General_features -> !Trending; General_features -> !TrendPrediction; General_features -> !Inventory; General_features -> !Maps;  )
fm_Collectd = FM(Network_Monitoring_Systems : ID ; )
foreach(f in Collectd_*) do
insert f into fm_Collectd.Network_Monitoring_Systems with mand
end
removeFeature fm_Collectd.ID
removeVariable Collectd_General_features

Ganglia_General_features = FM (General_features :  [IPSLAReports] LogicalGrouping Trending [TrendPrediction] AutoDiscovery Agent [SNMP] [Syslog] Plugins [Triggers_Alerts] DistributedMonitoring [Inventory] Maps [AccessControl] [IPv6] WebApp License DataStorageMethod ; AutoDiscovery : Viagmondcheckin ; WebApp : Viewing ; License : BSD ; DataStorageMethod : RRDtool ; General_features -> !IPSLAReports; General_features -> !TrendPrediction; General_features -> !Syslog; General_features -> !Triggers_Alerts; General_features -> !AccessControl;  )
fm_Ganglia = FM(Network_Monitoring_Systems : ID ; )
foreach(f in Ganglia_*) do
insert f into fm_Ganglia.Network_Monitoring_Systems with mand
end
removeFeature fm_Ganglia.ID
removeVariable Ganglia_General_features

finalFM = merge sunion fm_*
