F_A_S_T__General_features = FM (General_features :  Protocol Programminglanguage Windows [MacOSX] License [Portable] Detectconflict [Detectrename] [Detectmove] [Undo] [Linux] [Scheduling] [OtherOS] ; Protocol : Filesystem ; Programminglanguage : C ; License : GPLv3 ; General_features -> !MacOSX; General_features -> !Linux; General_features -> !OtherOS;  )
fm_F_A_S_T_ = FM(File_Synchronization_Software : ID ; )
foreach(f in F_A_S_T__*) do
insert f into fm_F_A_S_T_.File_Synchronization_Software with mand
end
removeFeature fm_F_A_S_T_.ID
removeVariable F_A_S_T__General_features

BBOX_General_features = FM (General_features :  Protocol [Programminglanguage] Windows MacOSX [License] [Portable] Detectconflict [Detectrename] [Detectmove] [Undo] Linux [Scheduling] [OtherOS] ; Protocol : Filesystem ; General_features -> !OtherOS;  )
fm_BBOX = FM(File_Synchronization_Software : ID ; )
foreach(f in BBOX_*) do
insert f into fm_BBOX.File_Synchronization_Software with mand
end
removeFeature fm_BBOX.ID
removeVariable BBOX_General_features

FreeFileSync_General_features = FM (General_features :  Protocol Programminglanguage Windows [MacOSX] License Portable Detectconflict Detectrename Detectmove [Undo] Linux Scheduling OtherOS ; Protocol : Filesystem ; Programminglanguage : C ; License : GPL ; Undo : (Versioning | Recycler) ; General_features -> !MacOSX;  )
fm_FreeFileSync = FM(File_Synchronization_Software : ID ; )
foreach(f in FreeFileSync_*) do
insert f into fm_FreeFileSync.File_Synchronization_Software with mand
end
removeFeature fm_FreeFileSync.ID
removeVariable FreeFileSync_General_features

IFolder_General_features = FM (General_features :  Protocol [Programminglanguage] Windows MacOSX License [Portable] Detectconflict Detectrename Detectmove [Undo] Linux [Scheduling] [OtherOS] ; Protocol : Filesystem ; Programminglanguage : (C | Mono) ; Windows : Clientsoftwareonly ; MacOSX : Clientsoftwareonly_945335614 ; License : GPL ; Detectconflict : Centralizeddatabase ; Detectrename : Files ; Detectmove : Files_67881559 ; General_features -> !Portable; General_features -> !OtherOS;  )
fm_IFolder = FM(File_Synchronization_Software : ID ; )
foreach(f in IFolder_*) do
insert f into fm_IFolder.File_Synchronization_Software with mand
end
removeFeature fm_IFolder.ID
removeVariable IFolder_General_features

DoubleSnap_General_features = FM (General_features :  [Protocol] Programminglanguage Windows [MacOSX] License [Portable] Detectconflict [Detectrename] [Detectmove] [Undo] [Linux] [Scheduling] [OtherOS] ; Programminglanguage : C ; License : GPLv3 ; General_features -> !MacOSX; General_features -> !Linux; General_features -> !OtherOS;  )
fm_DoubleSnap = FM(File_Synchronization_Software : ID ; )
foreach(f in DoubleSnap_*) do
insert f into fm_DoubleSnap.File_Synchronization_Software with mand
end
removeFeature fm_DoubleSnap.ID
removeVariable DoubleSnap_General_features

AcidRain_General_features = FM (General_features :  Protocol [Programminglanguage] Windows MacOSX [License] [Portable] Detectconflict [Detectrename] [Detectmove] [Undo] Linux [Scheduling] [OtherOS] ; Protocol : Filesystem ; General_features -> !OtherOS;  )
fm_AcidRain = FM(File_Synchronization_Software : ID ; )
foreach(f in AcidRain_*) do
insert f into fm_AcidRain.File_Synchronization_Software with mand
end
removeFeature fm_AcidRain.ID
removeVariable AcidRain_General_features

CreateSynchronicity_General_features = FM (General_features :  Protocol Programminglanguage Windows [MacOSX] License Portable Detectconflict [Detectrename] [Detectmove] [Undo] Linux [Scheduling] [OtherOS] ; Protocol : Filesystem ; Programminglanguage : VisualBasic_NET ; License : GPL ; Linux : UsingMono ; Scheduling : (Native | ViaOS) ; General_features -> !MacOSX; General_features -> !Detectrename; General_features -> !Detectmove; General_features -> !OtherOS;  )
fm_CreateSynchronicity = FM(File_Synchronization_Software : ID ; )
foreach(f in CreateSynchronicity_*) do
insert f into fm_CreateSynchronicity.File_Synchronization_Software with mand
end
removeFeature fm_CreateSynchronicity.ID
removeVariable CreateSynchronicity_General_features

DirSyncPro_General_features = FM (General_features :  Protocol Programminglanguage Windows MacOSX License Portable Detectconflict [Detectrename] [Detectmove] Undo Linux [Scheduling] OtherOS ; Protocol : Filesystem ; Programminglanguage : Java ; License : GPLv3 ; Undo : Createsbackups ; Scheduling : (Native | ViaOS) ; OtherOS : Crossplatform ; General_features -> !Detectrename; General_features -> !Detectmove;  )
fm_DirSyncPro = FM(File_Synchronization_Software : ID ; )
foreach(f in DirSyncPro_*) do
insert f into fm_DirSyncPro.File_Synchronization_Software with mand
end
removeFeature fm_DirSyncPro.ID
removeVariable DirSyncPro_General_features

CleanSync_General_features = FM (General_features :  Protocol Programminglanguage Windows [MacOSX] License [Portable] Detectconflict [Detectrename] [Detectmove] [Undo] [Linux] [Scheduling] [OtherOS] ; Protocol : Filesystem ; Programminglanguage : C ; License : GPLv3 ; General_features -> !MacOSX; General_features -> !Linux; General_features -> !OtherOS;  )
fm_CleanSync = FM(File_Synchronization_Software : ID ; )
foreach(f in CleanSync_*) do
insert f into fm_CleanSync.File_Synchronization_Software with mand
end
removeFeature fm_CleanSync.ID
removeVariable CleanSync_General_features

Conduit_General_features = FM (General_features :  Protocol Programminglanguage [Windows] [MacOSX] License [Portable] [Detectconflict] [Detectrename] [Detectmove] [Undo] Linux Scheduling [OtherOS] ; Protocol : Network_webapp ; Programminglanguage : Python ; License : GPL ; General_features -> !Windows; General_features -> !MacOSX; General_features -> !OtherOS;  )
fm_Conduit = FM(File_Synchronization_Software : ID ; )
foreach(f in Conduit_*) do
insert f into fm_Conduit.File_Synchronization_Software with mand
end
removeFeature fm_Conduit.ID
removeVariable Conduit_General_features

finalFM = merge sunion fm_*
