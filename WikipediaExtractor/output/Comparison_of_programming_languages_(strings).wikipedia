{{merge|comparison of programming languages (string functions)|date=February 2012}}
{{Unreferenced|date=February 2009}}
{{ProgLangCompare}}

== Concatenation ==
Different languages use different symbols for the concatenation operator. Many languages use the "+" symbol, though several deviate from this.

===Common variants===

{| class="wikitable"
|-
! Operator
! Languages
|-
| +
| [[ALGOL 68]], [[BASIC programming language|BASIC]], [[C++]], [[C Sharp (programming language)|C#]], [[Pascal programming language|Pascal]], [[Object Pascal]], [[Eiffel (programming language)|Eiffel]], [[Go (programming language)|Go]], [[JavaScript]], [[Java (programming language)|Java]], [[Python (programming language)|Python]], [[Turing (programming language)|Turing]], [[Ruby programming language|Ruby]], [[Windows PowerShell]], [[Objective-C]], [[F Sharp (programming language)|F#]]
|-
| ++
| [[Haskell (programming language)|Haskell]], [[Erlang]]
|-
| $+
| [[MIRC scripting language|mIRC Scripting Language]]
|-
| &
| [[Ada (programming language)|Ada]], [[AppleScript]], [[Curl programming language|Curl]], [[Seed7]], [[VHDL]], [[Visual Basic]], [[Microsoft Excel|Excel]], [[FreeBASIC]]
|-
| nconc
| [[Common Lisp]]
|-
| .
| [[Perl]] (before version 6), [[PHP]], and [[Maple computer algebra system|Maple]] (up to version 5), Autohotkey
|-
| ~ 
| [[Perl 6]] and [[D programming language|D]] 
|-
| <nowiki>||</nowiki>
| [[Icon (programming language)|Icon]], Standard [[SQL]], [[PL/I]], [[Rexx]], and [[Maple computer algebra system|Maple]] (from version 6)
|-
| <>
| [[Mathematica]] 
|-
| ..
| [[Lua programming language|Lua]]
|-
| ,
| [[J programming language]], [[Smalltalk]]
|-
| ^
| [[OCaml]], [[Standard ML]], [[F Sharp (programming language)|F#]], [[rc]]
|-
| //
| [[Fortran]]
|}

===Unique variants===

* [[Awk]] uses the empty string: two expressions adjacent to each other are concatenated. This is called [[Juxtaposition (literary)|juxtaposition]]. [[Unix shell]]s have a similar syntax. [[Rexx]] uses this syntax for concatenation including an intervening space.
* [[C (programming language)|C]] allows juxtaposition for string literals, however, for strings stored as [[Character (computing)|character]] [[Array data structure|arrays]], the <code>[[strcat]]</code> function must be used.
* [[MATLAB]] and [[Octave programming language|Octave]] use the syntax "<code>[x y]</code>" to concatenate x and y.
* [[Visual Basic]] Versions 1 to 6 can also use the "<code>+</code>" sign but, this leads to ambiguity if a string representing a number and a number is added together.
* [[Microsoft Excel]] allows both "<code>&</code>" and the function "<code>=CONCATENATE(X,Y)</code>".

== String literals ==
This section compares styles for declaring a [[string literal]].

=== Quoted raw ===

{| class="wikitable"
|-
! Syntax
! Language(s)
|-
| @"Hello, world!"
| C#, F#
|-
|"Hello, world!"
| Java, JavaScript, FreeBASIC
|-
| r"Hello, world!"
| Python
|-
| 'Hello, world!'
| Pascal, Object Pascal, PHP, Perl, Windows PowerShell, JavaScript
|-
| `Hello, world!`
| Go, Smalltalk
|}

=== Quoted interpolated ===

{| class="wikitable"
|-
! Syntax
! Language(s)
|-
| "Hello, $name!"
| PHP, Perl, Windows PowerShell
|-
| "Hello, #{name}!"
| Ruby
|-
|(format t "Hello, ~A" name)
|Common Lisp
|}

=== Escaped quotes ===
{| class="wikitable"
|-
! Syntax
! Language(s)
|-
| "I said \"Hello, world!\""
| C, C++, C#, F#, Java, Ocaml, Perl, Python, JavaScript, Mathematica
|-
| "I said `"Hello, world!`""
| Windows Powershell
|-
| "I said ^"Hello, world!^""
| REBOL
|-
| "I said, %"Hello, World!%""
| Eiffel
|-
| !"I said \"Hello, world!\""
| FreeBASIC
|}

=== Dual quoting ===
{| class="wikitable"
|-
! Syntax
! Language(s)
|-
| "I said ""Hello, world!"""
| Ada, ALGOL 68, Excel, Fortran, Visual Basic, FreeBASIC, COBOL
|-
| <nowiki>'I said ''Hello, world!'''</nowiki>
| Fortran, rc
|}

{{Expand section|date=June 2008}}

=== Multiple quoting ===

{| class="wikitable"
|-
! Syntax
! Language(s)
|-
| qq(I said "Hello, world!")
qq(I said "Hello, $name!")
| Perl (raw & interpolated)
|-
| %Q(I said "Hello, world!") <br /> %(I said "Hello, world!")
| Ruby
|-
| {I said "Hello, world!"}
| REBOL
|}

=== Here document ===

{| class="wikitable" border="1"
|-
! Syntax
! Language(s)
|-
| <<EOF<br />I have a lot of things to say<br />and so little time to say them<br />EOF
| Perl, PHP, Ruby
|-
| @"<br />I have a lot of things to say<br />and so little time to say them<br />"@
| Windows Powershell
|-
| "[<br />I have a lot of things to say<br />and so little time to say them<br />]"
| Eiffel
|-
| """<br />I have a lot of things to say<br />and so little time to say them<br />"""
| CoffeeScript
|}

=== Unique quoting variants ===
{| class="wikitable"
|-
! Syntax
! Variant name
! Language(s)
|-
| ?I said ??Hello, world!??.?
| Double quoting
| Smalltalk
|-
| <pre>'I said ''Hello, world!''.'</pre>
| Double quoting
| Pascal, Object Pascal, SQL standard
|-
| """Hello, world!"""
| Triple quoting
| Python
|-
| 13HHello, world!
| Hollerith notation
| Fortran 66
|-
| (indented with whitespace)
| Indented with whitespace and newlines
| YAML
|}

{{DEFAULTSORT:Comparison Of Programming Languages (Strings)}}
[[Category:Programming language comparisons]]
[[Category:String (computer science)]]