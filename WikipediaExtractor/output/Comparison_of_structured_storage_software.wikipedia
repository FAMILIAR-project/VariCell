{{distinguish|COM Structured Storage}}
'''Structured storage''' is [[computer storage]] for [[data structure|structured data]], often in the form of a [[distributed database]].<ref>{{cite web
  |url        = http://perspectives.mvdirona.com/CommentView,guid,afe46691-a293-4f9a-8900-5688a597726a.aspx
  |title      = Perspectives: One Size Does Not Fit All
  |last       = Hamilton
  |first      = James
  |date       = 3 November 2009
  |accessdate = 13 November 2009
}}</ref> [[Computer software]] formally known as structured storage systems include [[Apache Cassandra]],<ref>{{cite journal
  |last1      = Lakshman
  |first1     = Avinash
  |last2      = Malik
  |first2     = Prashant
  |title      = Cassandra - A Decentralized Structured Storage System
  |publisher  = Cornell University
  |url        = http://www.cs.cornell.edu/projects/ladis2009/papers/lakshman-ladis2009.pdf
  |accessdate = 13 November 2009
}}</ref> [[Google]]'s [[BigTable]]<ref>{{cite journal
  |last       = Chang
  |first      = Fay
  |coauthors  = Jeffrey Dean, Sanjay Ghemawat, Wilson C. Hsieh, Deborah A. Wallach, Mike Burrows, Tushar Chandra, Andrew Fikes, and Robert E. Gruber
  |title      = Bigtable: A Distributed Storage System for Structured Data
  |publisher  = Google
  |url        = http://labs.google.com/papers/bigtable-osdi06.pdf
  |accessdate = 13 November 2009
}}</ref> and [[HBase]].<ref>{{cite web
  |url        = http://blog.rapleaf.com/wp-content/uploads/2007/12/hbase.pdf
  |title      = HBase: structured storage of sparse data for Hadoop
  |last       = Kellerman
  |first      = Jim
  |accessdate = 13 November 2009
}} {{Dead link|date=October 2010|bot=H3llBot}}</ref>

== Comparison ==

The following is a comparison of notable structured storage systems.
{| class="wikitable sortable"
|-
! Project Name
! Type
! [[Persistence (computer science)|Persistence]]
! [[Replication (computer science)|Replication]]
! [[High Availability]]
! [[Transaction processing|Transactions]]
! [[Rack-locality Awareness]]
! [[Programming Language|Implementation Language]]
! Influences, [[Sponsor (commercial)|Sponsors]]
! [[Software license agreement|License]]
|-
| [[AllegroGraph]]
| [[Graph database]]
| {{Yes}}
| No - v5, 2010
| {{Yes}}
| {{Yes}}
| {{No}}
| [[Common Lisp]]
| [http://www.franz.com Franz Inc.]
| Commercial, Limited Free Version
|-
| [[Apache Jackrabbit]]
| Key-value & Hierarchical & Document
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| likely
| [[Java (programming language)|Java]]
| [[Apache Software Foundation|Apache]], [[Roy Fielding]], [[Day Software]]
| [[Apache License|Apache 2.0]]
|-
| [[Berkeley DB]]/[[Dbm]]/[[Ndbm]] (bdb)1.x
| Key-value
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| [[C (programming language)|C]]
| old school
| Various
|-
| [[Berkeley DB]] Sleepycat/Oracle Berkeley DB 5.x
| Key-value
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| C, [[C++]], or Java
| dbm, Sleepycat/Oracle
| dual GPL-like Sleepycat License/commercial
|- 
| [[Oracle NoSQL Database]] 
| Key-value
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| Java
| Oracle
| dual AGPLv3 License/commercial
|-
| [[Cassandra (database)|Cassandra]]
| Key-value
| {{Yes}}
| {{Yes}}
| Distributed
| {{No}}<ref>[http://stackoverflow.com/questions/2976932/cassandra-transaction-support java - Cassandra - transaction support - Stack Overflow]</ref>
| {{Yes}}
| Java
| Dynamo and [[BigTable]], Facebook/Digg/Rackspace
| [[Apache License|Apache 2.0]]
|-
| [[Oracle Coherence|Coherence]]
| Key-value
| Persistent data typically in an [[Relational database management system|RDBMS]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| [[Java (programming language)|Java]]
| [[Oracle Corporation|Oracle]] (previously Tangosol)
| Commercial
|-
| [[CouchDB]]
| Document
| {{Yes}}
| {{Yes}}
| replication + load balancing
| Atomicity is per document, per CouchDB instance<ref>[http://wiki.apache.org/couchdb/Frequently_asked_questions#How_do_I_use_transactions_with_CouchDB.3F How do I use transactions with CouchDB?]</ref>
| {{No}}
| [[Erlang (programming language)|Erlang]]
| Lotus Notes / Ubuntu, Mozilla, IBM
| [[Apache License|Apache 2.0]]
|-
| [[Extensible Storage Engine]](ESE/NT)
| Document or Key-value
| {{Yes}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| C++, Assembly
| [[Microsoft]]
| per Windows License
|-
| [[FoundationDB]]
| Ordered Key-value
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| Depends on user configuration
| C++
| [http://www.foundationdb.com FoundationDB]
| Commercial with free tier
|-
| [http://gigaspaces.com/ GigaSpaces]
| Tuple Space & Relational & Document & key-value
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| Depends on user configuration
| [[Java (programming language)|Java]]
| [[Tuple space]]
| commercial
|-
| [[GT.M]]
| Key-value
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}} 
| Depends on user configuration
| C (small bits of assembly language)
| [http://fis-gtm.com FIS]
| [[Affero General Public License|AGPL v3]]
|-
! Project Name
! Type
! Persistence
! Replication
! High Availability
! Transactions
! Rack-locality Awareness
! Implementation Language
! Influences, Sponsors
! License
|-
| [[HBase]]
| Key-value
| {{Yes}}. Major version upgrades require re-import.
| {{yes}} [[HDFS]],<ref>[http://wiki.apache.org/hadoop/Hbase HBase: Bigtable-like structured storage for Hadoop HDFS]</ref> [[Amazon S3]]<ref>[http://hbase.s3.amazonaws.com/hbase/HBase-EC2-HUG9.pdf HBase on EC2]</ref> or [[Amazon Elastic Block Store]].<ref>[http://aws-musings.com/hbase-on-ec2-using-ebs-volumes-lessons-learned/ HBase on EC2 using EBS volumes : Lessons Learned | My AWS Musings]</ref>
| {{yes}}<ref>[http://wiki.apache.org/hadoop/Hbase/MultipleMasters Hbase/MultipleMasters - Hadoop Wiki]</ref>
| {{yes}}<ref>[http://hadoop-hbase.blogspot.com.es/2012/03/acid-in-hbase.html ACID in HBase]</ref>
| See HDFS, S3 or EBS.
| Java
| [[BigTable]]
| [[Apache License|Apache 2.0]]
|-
| [[Hypertable]]
| Key-value
| {{Yes}}
| {{Yes}}, with KosmosFS and Ceph
| coming in 2.0
| coming
| {{Yes}}, with KosmosFS
| C++
| [[BigTable]]
| [[GNU General Public License|GPL 2.0]]
|-
| [[Information Management System]] IBM IMS aka DB1
| Key-value. Multi-level
| {{Yes}}
| {{Yes}}
| {{Yes}}, with HALDB
| {{Yes}}, with IMS TM
| Unknown
| [[Assembly language|Assembler]]
| IBM since 1966
| Proprietary
|-
| [[Memcached]]
| Key-value
| {{No}}
| {{No}}
| {{No}}
| {{partial}} Only supports CAS (Check And Set - or Compare And Swap)<ref>[http://stackoverflow.com/questions/5187323/memcache-with-transactions sql - Memcache with transactions? - Stack Overflow]</ref><ref>[http://benrobb.com/wp-content/uploads/2009/01/memcached.pdf Memcached]</ref>
| {{No}}
| C
| Six Apart/Couchbase/Fotolog/Facebook 
| BSD-like permissive copyright by Danga
|-
| [[LevelDB]]
| Key-value, [[Bigtable]]
| {{Yes}}
| {{No}}
| {{No}}
| {{partial}} Multiple writes can be combined into single operation
| {{No}}
| C++
| Google 
| New BSD License
|-
| [[Lightning Memory-Mapped Database|LightningDB]]
| Key-value, memory-mapped files
| {{Yes}}
| {{No}}
| {{No}}
| ACID, MVCC
| {{No}}
| C
| [http://symas.com/mdb/] 
| [http://www.openldap.org/software/release/license.html OpenLDAP Public License]
|-
| [[MongoDB]]
| Document (JSON)
| {{Yes}}
| {{Yes}}
| fail-over
| {{partial}} Single document atomicity<ref>[http://www.mongodb.org/display/DOCS/Atomic+Operations Atomic Operations - MongoDB]</ref>
| {{No}}
| C++
| [http://www.10gen.com 10gen] 
| [[Affero General Public License|GNU AGPL v3.0]]
|-
| [[Neo4j]]
| [[Graph database]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| Java
| [http://www.neotechnology.com/ Neo Technology]
| [[General Public License|GNU GPL v3.0]]
|-
| [[Redis]]
| Key-value
| {{Yes}}. But last few queries can be lost.<ref>[http://redis.io/topics/persistence Redis Persistence]</ref>
| {{Yes}}
| {{Yes}}<ref>[http://stackoverflow.com/questions/4719346/redis-master-slave-replication-single-point-of-failure high availability - Redis master/slave replication - single point of failure? - Stack Overflow]</ref>
| {{Yes}}<ref>[http://redis.io/topics/transactions Transactions ? Redis]</ref>
| {{No}}
| Ansi-C
| VMWare, Memcache
| [[BSD licenses|BSD]]
|-
| [[SimpleDB]] (Amazon.com)
| Document & Key-value
| {{Yes}}
| {{Yes}} (automatic)
| {{Yes}}
| Unknown
| likely
| Erlang
| Amazon.com
| Amazon internal only
|-
| [[Tarantool]]
| Free-dimensional tuples with primary and secondary keys
| {{Yes}}. (Asynchronous)
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| Objective C, Lua
| Memcached, Mnesia, MySQL, [[Mail.ru]]
| [[BSD licenses|BSD]]

|-
! Project Name
! Type
! Persistence
! Replication
! High Availability
! Transactions
! Rack-locality Awareness
! Implementation Language
! Influences, Sponsors
! License
|}

== See also ==
* [[NoSQL]]

== References ==
{{Reflist|2}}

{{DEFAULTSORT:Comparison Of Structured Storage Software}}
[[Category:Structured storage]]
[[Category:Database software comparisons|structured storage]]