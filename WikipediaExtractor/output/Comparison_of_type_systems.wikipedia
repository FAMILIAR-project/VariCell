{| class="wikitable sortable"
|+
! [[Programming language]]
! [[Type system#Static and dynamic typing|static / dynamic]]
! [[Type system#Strong and weak typing|strong / weak]]
! [[Type system#Safely and unsafely typed systems|safety]]
! [[Type system#Compatibility: equivalence and subtyping|nominative / structural]]
|-
| [[Ada (programming language)|Ada]]
| style="background:azure;"     | static
| style="background:azure;"     | strong
| style="background:honeydew;"  | safe
| style="background:azure;"     | [[nominative type system|nominative]]
|- 
| [[Assembly language]]
| style="background:seashell;"  | none
| style="background:azure;"     | strong
| style="background:seashell;"  | unsafe
| style="background:AliceBlue;" | [[structural type system|structural]]
|- 
| [[APL (programming language)|APL]]
| style="background:AliceBlue;" | dynamic
| style="background:AliceBlue;" | weak
| style="background:honeydew;"  | safe
| style="background:azure;"     | [[nominative type system|nominative]]

|- 
| [[BASIC]]
| style="background:azure;"     | static
| style="background:AliceBlue;" | weak
| style="background:honeydew;"  | safe
| style="background:azure;"     | [[nominative type system|nominative]]
|- 
| [[C (programming language)|C]]
| style="background:azure;"     | static
| style="background:AliceBlue;" | weak
| style="background:seashell;"  | unsafe
| style="background:azure;"     | [[nominative type system|nominative]]
|-
| [[C++]]
| style="background:azure;"     | static
| style="background:azure;"     | strong
| style="background:seashell;"  | unsafe
| style="background:azure;"     | [[nominative type system|nominative]]
|- 
| [[C Sharp (programming language)|C#]]<ref>The [[C (programming language)|C]] basis is unchanged. 3.0 has hybrid typing with Anonymous Types. Can be both unsafe and safe with use of 'unsafe' functions and code blocks.</ref>
| style="background:azure;"     | static
| style="background:azure;"     | strong
| style="background:ivory;"     | both 
| style="background:azure;"     | [[nominative type system|nominative]]
|- 
| [[Cayenne_programming_language|Cayenne]]
| style="background:ivory;"     | dependent
| style="background:azure;"     | strong
| style="background:honeydew;"  | safe
| style="background:azure;"     | [[structural type system|structural]]
|- 
| [[Centura (programming language)|Centura]]
| style="background:azure;"     | static
| style="background:AliceBlue;" | weak
| style="background:honeydew;"  | safe
| style="background:azure;"     | [[nominative type system|nominative]]
|- 
| [[Clipper (programming language)|Clipper]]
| style="background:AliceBlue;" | dynamic
| style="background:AliceBlue;" | weak
| style="background:honeydew;"  | safe
| style="background:ivory;"     | [[duck typing|duck]]
|- 
| [[D (programming language)|D]]
| style="background:azure;"     | static
| style="background:azure;"     | strong
| style="background:ivory;"     | both<ref>[[D (programming language)|D]]'s philosophy is: safe by default with unsafe "backdoors". D also supports @safe functions that provably can't corrupt memory at the cost of disabling some of the unsafe language constructs.</ref>
| style="background:azure;"     | [[nominative type system|nominative]]
|-
| [[Object Pascal|Delphi]]
| style="background:azure;"     | static
| style="background:azure;"     | strong
| style="background:honeydew;"  | safe
| style="background:azure;"     | [[nominative type system|nominative]]
|- 
| [[E_programming_language|E]]
| style="background:azure;"     | dynamic
| style="background:azure;"     | strong
| style="background:honeydew;"  | safe
| style="background:azure;"     | [[nominative type system|nominative]] + [[duck typing|duck]]
|- 
| [[Eiffel (programming language)|Eiffel]]
| style="background:azure;"     | static
| style="background:azure;"     | strong
| style="background:honeydew;"  | safe
| style="background:azure;"     | [[nominative type system|nominative]]
|- 
| [[Erlang (programming language)|Erlang]]
| style="background:azure;"     | dynamic
| style="background:azure;"     | strong
| style="background:honeydew;"  | safe
| style="background:azure;"     | [[nominative type system|nominative]]
|-
| [[Fortran]]
| style="background:azure;"     | static
| style="background:azure;"     | strong
| style="background:honeydew;"  | safe
| style="background:azure;"     | [[nominative type system|nominative]]
|-
| [[Groovy (programming language)|Groovy]]
| style="background:AliceBlue;" | dynamic
| style="background:azure;"     | strong
| style="background:honeydew;"  | safe
| style="background:azure;"     | [[duck typing|duck]]
|- 
| [[Haskell (programming language)|Haskell]]
| style="background:azure;"     | static
| style="background:azure;"     | strong
| style="background:honeydew;"  | safe
| style="background:AliceBlue;" | [[nominative type system|nominative]]
|- 
| [[Io (programming language)|Io]]
| style="background:AliceBlue;" | dynamic
| style="background:azure;"     | strong
| style="background:honeydew;"  | safe
| style="background:ivory;"     | [[duck typing|duck]]
|- 
| [[Java (programming language)|Java]]
| style="background:azure;"    | static
| style="background:azure;"    | strong
| style="background:honeydew;" | safe
| style="background:azure;"    | [[nominative type system|nominative]]
|- 
| [[JavaScript]]
| style="background:AliceBlue;" | dynamic
| style="background:AliceBlue;" | weak
| style="background:honeydew;"  | safe
| style="background:ivory;"     | [[duck typing|duck]]
|- 
| [[Lisp (programming language)|Lisp]]
| style="background:AliceBlue;" | dynamic
| style="background:azure;"     | strong
| style="background:honeydew;"  | safe
| style="background:AliceBlue;" | [[structural type system|structural]]
|-
| [[Lua (programming language) |Lua]]<ref>Variables can change type with the use of metatables.</ref>
| style="background:AliceBlue;" | dynamic
| style="background:AliceBlue;" | weak
| style="background:honeydew;"  | safe
| style="background:AliceBlue;" | [[structural type system|structural]]
|- 
| [[ML (programming language)|ML]]
| style="background:azure;"     | static
| style="background:azure;"     | strong
| style="background:honeydew;"  | safe
| style="background:AliceBlue;" | [[structural type system|structural]]
|- 
| [[Objective-C]]<ref>Applies to the [[Objective-C]] extension only.</ref>
| style="background:AliceBlue;" | dynamic
| style="background:AliceBlue;" | strong
| style="background:seashell;"  | unsafe
| style="background:ivory;"     | [[duck typing|duck]]
|- 
| [[Pascal (programming language)|Pascal]]
| style="background:azure;"     | static
| style="background:azure;"     | strong
| style="background:honeydew;"  | safe
| style="background:azure;"     | [[nominative type system|nominative]]
|- 
| [[Perl]] 1-5
| style="background:AliceBlue;" | dynamic
| style="background:AliceBlue;" | weak
| style="background:honeydew;"  | safe
| style="background:azure;"     | [[nominative type system|nominative]]
|- 
| [[Perl 6]]<ref>Not yet released.</ref>
| style="background:ivory;"     | hybrid
| style="background:ivory;"     | hybrid
| style="background:honeydew;"  | safe
| style="background:ivory;"     | [[duck typing|duck]]
|- 
| [[PHP]]
| style="background:AliceBlue;" | dynamic
| style="background:AliceBlue;" | weak
| style="background:honeydew;"  | safe
| ?
|- 
| [[Pike (programming language)|Pike]]
| style="background:azure;"     | static+dynamic
| style="background:AliceBlue;" | strong
| style="background:honeydew;"  | safe
| style="background:azure;"     | [[structural type system|structural]]
|-
| [[Python (programming language)|Python]]
| style="background:AliceBlue;" | dynamic
| style="background:azure;"     | strong
| style="background:honeydew;"  | safe
| style="background:ivory;"     | [[duck typing|duck]]
|- 
| [[Ruby (programming language)|Ruby]]
| style="background:AliceBlue;" | dynamic
| style="background:azure;"     | strong
| style="background:honeydew;"  | safe
| style="background:ivory;"     | [[duck typing|duck]]
|- 
| [[Scala (programming language)|Scala]]
| style="background:AliceBlue;" | static
| style="background:azure;"     | strong
| style="background:honeydew;"  | safe
| style="background:azure;"     | [[nominative type system|nominative]]
|- 
| [[Scheme (programming language)|Scheme]]
| style="background:AliceBlue;" | dynamic
| style="background:azure;"     | strong
| style="background:honeydew;"  | safe
| style="background:azure;"     | [[nominative type system|nominative]]
|- 
| [[Smalltalk]]
| style="background:AliceBlue;" | dynamic
| style="background:azure;"     | strong
| style="background:honeydew;"  | safe
| style="background:ivory;"     | [[duck typing|duck]]
|- 
| [[Visual Basic]]
| style="background:ivory;"     | hybrid
| style="background:ivory;"     | hybrid
| style="background:honeydew;"  | safe
| style="background:azure;"     | [[nominative type system|nominative]]
|- 
| [[Windows PowerShell]]
| style="background:ivory;"     | hybrid
| style="background:ivory;"     | hybrid
| style="background:honeydew;"  | safe
| style="background:ivory;"     | [[duck typing|duck]]
|- 
| [[xHarbour]]
| style="background:AliceBlue;" | dynamic
| style="background:AliceBlue;" | weak
| style="background:honeydew;"  | safe
| style="background:ivory;"     | [[duck typing|duck]]
|}
<references />

[[Category:Type systems|Comparision]]
[[Category:Programming language comparisons|Type systems]]

[[zh:Template:???????]]
[[ru:????????? ?????? ????????????????]]