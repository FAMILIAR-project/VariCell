{{refimprove|date=December 2011}}
This is a list of [[server-side JavaScript]] solutions.

== Server-side JavaScript use ==

<!-- In each table, link 1st instance of terms, remove later WP:REPEATLINK(s). -->
{|class="wikitable sortable"
|+ Examples of current uses of JavaScript on the server side
|-
! Project-product name
! JavaScript engine
! Server platform(s)
! Comments
|-
| [[10gen]]
| [[Rhino (JavaScript engine)|Rhino]]
| 10gen application server
| Uses Rhino parser; compiles JavaScript to Java
|-
| [[Alfresco (software)|Alfresco]]
| Rhino
| Any Java servlet container and standalone.
| Has JavaScript API that allows webscripts to create, access, delete, and manipulate data in the main Alfresco repository
|-
| [[Apache Sling]]
| Rhino
| Any Java servlet container and standalone
| Generic Java web application framework that allows to use any script language via the standard Java Script Engine interface; Sling is RESTful by design and sits on top of a [[content repository API for Java|Java Content Repository]], giving scripts full access to the JCR
|-
| [[AJAX Push Engine|APE]]
| [[SpiderMonkey (JavaScript engine)|SpiderMonkey]]
| Standalone [[HTTP]]
| Used to write custom server modules (manage message queue, users, channels, sockets, HTTP, ...). [http://www.ape-project.org/wiki/index.php/How_to_build_a_serverside_JS_module]
|-
| [[AppJet]]
| Rhino (modified)
|
| Also provides hosting in a virtual machine
|-
| [[Jaxer#Aptana Jaxer|Aptana Jaxer]]
| SpiderMonkey
| [[Apache HTTP Server]]
| A community open source Ajax-server based on the Mozilla browser (DOM + JavaScript engine). HTML, JavaScript, and CSS are native to Jaxer, as are XMLHttpRequests, JSON, DOM scripting, etc. It offers access to databases, files, and networking, as well as logging, process management, scalability, security, integration APIs, and extensibility. Not developed anymore by Aptana.
|-
| [[Active Server Pages|ASP]]
| [[JScript]]
| [[Internet Information Services|IIS]]
|-
| [[CouchDB]]
| SpiderMonkey
| Standalone [[HTTP]]
| Used in [[MapReduce]] and update validation functions as well as to transform [[JSON]] documents and view results into [[HTML]] or other [[content-type]]s.
|-
| [[Eclipse (software)|Eclipse e4]]
| Rhino
| [[Equinox OSGi]], bundled with [[Jetty (web server)|Jetty]], any servlet container (using the servlet bridge)
| Extensions can be written in JavaScript, not just Java, especially servlets using the [[OSGi]] [[HTTP]] Service. Frontends can be developed with [[Rich Ajax Platform|Eclipse RAP]] using the [[Standard Widget Toolkit|SWT]] and [[JFace]] APIs, or any other UI framework. Focus is on modularity ([[plug-in (computing)|plug-ins]]), extensibility, scalability.
|-
| [[EditMe]]
| Rhino
| Hosted (Tomcat)
| Wiki with embedded JavaScript engine and API for application development within the wiki
|-
| [[GLUEscript]] {{anchor|GLUEscript}}
| SpiderMonkey
| Apache HTTP Server, FastCGI and stand-alone
| Glueing Libraries Using [[Ecmascript]] (GLUE) ports [[sqlite]], [[mysql]], [[memcached]], [[wxWidgets]], [[POCO C++ Libraries|POCO]], ... to JavaScript. GLUEscript is the successor of wxJavaScript.<ref>[http://gluescript.sourceforge.net/ GLUEscript], By Franky Braem</ref>
|-
| [[Google Apps Script]]
| Rhino (com.google.apps.maestro.rhino)
| [[Google AppEngine]]
| Implement Enterprise Workflows with Apps Script. Google Apps Script can be embedded in Google Sites giving your Google Site a backend. In addition, you can automate simple tasks across Google Products. Google Apps Script also allows interaction with non Google APIs and JDBC calls to databases.
|-
| [[GromJS]]
| SpiderMonkey
| [[Bauk (web server)|Bauk]]
| GromJS is a Server Side JavaScript (SSJS) interpreter which provides the ability to use an enhanced version of the JavaScript language on a web server with similar functionality to PHP, CGI, ASP, mod_perl or any other server side scripting solution.<ref>[http://gromjs.org/ GromJS], By Mark Constable</ref>
|-
| [[Helma]]
| Rhino
| [[Jetty (web server)|Jetty HTTP Server]]
| Complete package with web server and framework.
|-
| [[JSSP]]
| Rhino
| Any Java servlet container
| Contains a modified Rhino version for embedded SQL support
|-
| [[MynaJS]]
| Rhino
| Any Java servlet container
|
|-
| [[Narwhal]]
| Rhino, SpiderMonkey, V8<ref>[http://tlrobinson.github.com/narwhal/]</ref>
| Standalone
|
|-
| [[Node.js]] {{anchor|Node_js}}
| [[V8 (JavaScript engine)|V8]]
| Standalone
| JavaScript asynchronous, event-based I/O. Influenced by systems like Ruby's Event Machine, [[Perl]]'s [[Perl Object Environment|POE]] or Python's Twisted. Plenty of modules available.
|-
| [[Opera (web browser)|Opera]]
| [[Presto (layout engine)#ECMAScript engines|Futhark]]
| Opera Unite
| JavaScript is the server-side language used to develop services for the Opera Unite feature of the Opera browser. This is a server built in to the browser. The JavaScript API includes local file access to a virtual sandboxed file-system and persistent storage via persistent global variables.
|-
| [[SilkJS]]
| [[V8 (JavaScript engine)|V8]]
| Standalone
| JavaScript Synchronous, CommonJS, JST (JSP-like template)/Markdown templating, easily extended with C++/Javascript Linux/OSX compatible. Pre-fork Http Server, Modules: [[MySQL]], ORM, [[memcached]], [[redis]], [[SQLite3]], [[Oracle database|Oracle]], [[ncurses]], [[GD2]], [[cURL]], [[Secure Shell|SSH]], [[FTP]]/[[SSH File Transfer Protocol|SFTP]], [[GitHub]], builtin - [[LESS]] compiler and [[CoffeeScript]] compiler.
"SilkJS enables JavaScript as a scripting language in the server environment. You can think of SilkJS as a command shell, along the lines of Perl or PHP, except the language you write in is JavaScript."<ref>[http://silkjs.net/ SilkJS], By Michael Schwartz</ref>
|-
| [[TeaJS]]
| [[V8 (JavaScript engine)|V8]]
| Standalone
| Formerly known as v8cgi.
|-
| [[Wakanda (Software)| WakandaDB]]
| [[WebKit#JavaScriptCore|WebKit JavaScriptCore]]
| Standalone
| JavaScript Synchronous multi-threaded web server and  no-sql database,  supporting the CommonJS module specification, written in C++.
|}

Other common server-side programming languages are [[JavaServer Pages]] (JSP), [[Active Server Pages]] (ASP), [[Perl]], [[PHP]], [[Python (programming language)|Python]], [[Ruby programming language|Ruby]], [[ColdFusion]], and others.

==See also==
*[[JavaScript]]
*[[Server-side JavaScript]]
*[[CommonJS#Implementations|CommonJS implementations]]

==References==
{{reflist}}

==External links==
*[http://groups.google.com/group/commonjs The Server-Side JavaScript Google Group] dedicated to creating cross-platform SSJS standard APIs.
*[https://developer.mozilla.org/en/JavaScript_shells Mozilla JavaScript shells] especially section "Standalone JavaScript shells"

{{ECMAScript}}

{{DEFAULTSORT:Server-side JavaScript}}
[[Category:JavaScript]]