This is a comparison of notable [[Free software|free]] and [[Open-source software|open source]] [[configuration management]] software, suitable for tasks typically performed by a [[system administrator]].
<!-- IF YOU DON'T PAY ATTENTION TO THIS MESSAGE, YOUR EDIT WILL BE ROLLED BACK WITHOUT WARNING.
Only place entries here that are links to actual Wikipedia articles about notable open source configuration management software. External links, redlinks, non-notable sites will be removed. If you have questions, use the talk page. Please try to keep entries in alphabetical order.  Adding unnecessary links or text to any other section (such as the "References" section) will also be removed. Thanks.
-->

== Basic properties ==
"Verify mode" refers to having an ability to determine whether a node is conformant with a guarantee of not modifying it, and typically involves the exclusive use of an internal language supporting read-only mode for all potentially system-modifying operations.
<!-- In each table, link 1st instance of terms, remove later WP:REPEATLINK(s). -->
{| class="wikitable sortable" style="text-align: center; width: 95%"
|-style="background: #ececec;"
! style="width:12em" |
! Language
! License
! [[mutual authentication|Mutual auth]]
! [[encryption|Encrypts]]
! Verify mode
! First release
! Latest stable release
|-	 
! {{rh}} | [[Ansible (software)|Ansible]]	 
| [[Python (programming language)|Python]]
| [[GNU General Public License|GPL]]
| {{yes}}<ref name="Key Pair">Key Pair: Uses public/private key pairs and key fingerprints for mutual authentication, like SSH.</ref>
| {{yes}}<ref name="Secure Shell">Secure Shell: Uses the Secure Shell protocol for encryption.</ref>
| {{yes}}
| align="left" | 2012-03-08 
| align="left" | 2013-04-02 1.1<ref>[https://github.com/ansible/ansible/blob/devel/CHANGELOG.md Ansible CHANGELOG]</ref>
|-
! {{rh}} | [[Arusha Project]] (ARK)
| Python
| [[BSD licenses|BSD]] [http://ark.sourceforge.net/license.html]
| {{yes}}<ref name="Key Pair">Key Pair: Uses public/private key pairs and key fingerprints for mutual authentication, like SSH.</ref>
| {{yes}}<ref name="Secure Shell">Secure Shell: Uses the Secure Shell protocol for encryption.</ref>
| 
| align="left" |2001-07-21<ref>[http://sourceforge.net/project/showfiles.php?group_id=2057&package_id=20771 2001-07-21]</ref>
| align="left" | 2005-04-19 20050419
|-
! {{rh}} | [[Bcfg2]]
| Python
| BSD [https://github.com/Bcfg2/bcfg2/blob/master/LICENSE]
| {{yes}}<ref name="Certificate and Passwords">Certificate and Passwords: Uses SSL X.509 certificate and fingerprint for clients to authenticate server, and passwords for server to authenticate clients; clients should only share the same password if they are allowed access to each other's configuration data.</ref>
| {{yes}}<ref name="SSL">SSL: Uses the Secure Sockets Layer, Transport Layer Security (TLS) for encryption.</ref>
| {{yes}}<ref name="Verify-Bcfg2">Full support for non-modifying determination of node compliance, including nodes not previously modified by a Bcfg2 configuration pass.</ref>
| align="left" |2004-08-11<ref>[http://trac.mcs.anl.gov/projects/bcfg2/wiki/Download 2004-08-11]</ref>
| align="left" |2013-03-21 1.3.1<ref>[http://trac.mcs.anl.gov/projects/bcfg2/wiki/Download 1.3.1]</ref>
|-
! {{rh}} | [[cdist]]
| Python
| [[GNU General Public License|GPL]]
| {{yes}}<ref name="Key Pair">Key Pair: Uses public/private key pairs and key fingerprints for mutual authentication, like SSH.</ref>
| {{yes}}<ref name="Secure Shell">Secure Shell: Uses the Secure Shell protocol for encryption.</ref>
| 
| align="left" |2010
| align="left" |2012-06-05 2.0.13
|-
! {{rh}} | [[Chef (software)|Chef]]
| [[Ruby (programming language)|Ruby]]
| [[Apache License|Apache]]
| {{yes}}<ref name="RSA Shared Keys">Per request signed headers and pre-shared keys.</ref>
| {{yes}}<ref name="SSL">Payload encryption via SSL if HTTPS proxy is configured.</ref>
| {{yes}}<ref name="Verify-Chef">Chef 10.14.0+ (called why-run mode)</ref> [http://tickets.opscode.com/browse/CHEF-13]
| align="left" |2009-01-15 0.5.0
| align="left" |2013-02-13 11.4.0,<ref>[http://www.opscode.com/blog/2013/02/13/chef-client-11-4-0-10-22-0-released/]</ref> 2013-02-15 11.0.6 (server)<ref>[http://www.opscode.com/blog/2013/02/15/chef-server-11-0-6-and-10-24-0-released/]</ref>
|-
! {{rh}} | [[CFEngine]]
| [[C (programming language)|C]]
| GPL, COSL [http://cfengine.com/pages/faq]
| {{yes}}<ref name="Key Pair"/>
| {{yes}}<ref name="Custom">Custom: Uses code specific to the software for this function.</ref>
| {{yes}}<ref name="Dry-run">Called dry-run, used to verify what would happen</ref>[https://cfengine.com/manuals/cf-quickref3]
| align="left" | 1993
| align="left" | 2013-03-15 3.4.4<ref>[http://www.cfengine.org/pages/source_code]</ref>
|-
! {{rh}} | [[ISconf]]
| Python
| GPL [http://trac.t7a.org/isconf/browser/trunk/LICENSE]
|{{yes}}<ref name="HMAC">HMAC: Uses [[HMAC]] signatures on all network traffic.</ref>
| {{no}}<ref>Improved security which would include an encrypted, mutually authenticated, peer-to-peer message bus is tracked [http://trac.t7a.org/isconf/ticket/39 here].</ref>
|
| align="left" |1998
| align="left" |2006-08-13 4.2.8.233
|-
! {{rh}} | [[Juju (software)|Juju]]
| Python
| [[Affero General Public License]]
| 
|
|
| align="left" |2010-09-17<ref>[https://launchpad.net/juju/+series]</ref>
| 
|-
! {{rh}} | Local ConFiGuration system ([[LCFG]])
| Perl
| GPL
| {{partial}}<ref>LCFG does not provide its own transport mechanism; it relies on an external program, most often Apache. Using Apache it should be possible to do mutual authentication in several ways; however the documentation at [http://www.lcfg.org/doc/guide.pdf The Complete Guide to LCFG], Section 9.4: Authorization and Security, shows access control based on IP address ranges, implying that the client does not authenticate itself to the server via an SSL certificate; it also does not mention if the LCFG client checks the validity of the server's SSL certificate (such as via a per-site fingerprint distributed with the client, or a chain of trust to an accredited CA). It mentions that there can be a per-client password in the profile, but also states that ''"The contents of the LCFG profile should be considered public"''.</ref>
| {{partial}}<ref>LCFG supports encrypted communications channels (SSL via Apache); however the documentation at [http://www.lcfg.org/doc/guide.pdf The Complete Guide to LCFG], Section 9.4: Authorization and Security, states that ''"The contents of the LCFG profile should be considered public"''.</ref>
| 
| align="left" |1994
| align="left" |Weekly Releases
|-
! {{rh}} | [[OCS Inventory]] NG with GLPI
| Perl, PHP, [[C++]]
| GPL
| {{no}}<ref>Server authenticates to client, but client does not authenticate to server. See [http://prdownloads.sourceforge.net/ocsinventory/OCS_Inventory_NG-Installation_and_Administration_Guide_1.9_EN.pdf.zip?download OCS Inventory NG Installation and Administration guide], page 114.</ref>
| {{yes}}<ref name="SSL"/>
|
| align="left" |2003
| align="left" |2011/09/13<ref>[http://www.ocsinventory-ng.org/en/home/news/version-2-0-1-stable.html]</ref>
|-
! {{rh}} | Open pc server integration ([[Opsi]])
| Python, Java
| GPL
| {{no}}
| {{yes}}<ref name="SSL"/>
|
| align="left" |2004
| align="left" |2010-10-01 4.0
|-
! {{rh}} | [[PIKT]]
| C
| GPL [http://pikt.org/pikt/licensing.html]
| {{yes}}<ref>PIKT uses shared secret keys for mutual authentication. ''"As an option, you can use secret key authentication to prove the master's identity to the slave. [...] If one managed to crack any system in the PIKT domain, one would have access to all common secrets.  To solve this problem, you may use per-slave uid, gid, and private_key settings."'' - from [http://pikt.org/pikt/ref/ref.6.security_considerations.html Security Considerations].</ref>
| {{yes}}<ref>''"For file installs, file fetches (to diff against the central configuration), and command executions, you can optionally encrypt all such data traffic between master and slave."'' - from [http://pikt.org/pikt/ref/ref.6.security_considerations.html Security Considerations].</ref>
|
| align="left" |1998<ref>[http://pikt.org/pikt/dist/?C=M;O=A 1998]</ref>
| align="left" |2007-09-10 1.19.0
|-
! {{rh}} | [[Puppet (software)|Puppet]]
| Ruby
| Apache from 2.7.0, GPL before then
| {{yes}}<ref name="Certificates">Certificates: Uses SSL X.509 Certificates for mutual authentication. Can use any SSL Certificate Authority to manage the Public Key Infrastructure.</ref>
| {{yes}}<ref name="SSL"/>
| {{yes}}<ref name="Verify-Puppet">Using the --noop option</ref> [http://docs.puppetlabs.com/man/agent.html]
| align="left" |2005-08-30<ref>[http://puppetlabs.com/downloads/puppet/?C=M;O=A 2005-08-30]</ref>
| align="left" |2013-03-12  3.1.1<ref name="Puppet 3.1.1 Release notes">[https://projects.puppetlabs.com/versions/375]</ref>
|-
! {{rh}} | [[Quattor]]
| Perl, Python
| [http://www.opensource.org/licenses/eudatagrid.php EDG][http://eu-datagrid.web.cern.ch/eu-datagrid/license.html], Apache 2.0
| {{yes}}<ref>"Client to server authentication and vice versa: on one hand, this allows to enforce access policies
to sensitive data according to the client "name", on the other hand, clients are guaranteed to talk to
the original server." - from [http://isscvs.cern.ch:8180/cgi-bin/cvsweb.cgi/%7Echeckout%7E/elfms/quattor/documentation/installation-guide/pdf/quattor-install-guide_1_1.pdf?rev=HEAD&content-type=application/pdf&cvsroot=elfms Quattor Installation and User Guide: Version 1.1.x], page 70</ref>
| {{yes}}<ref>"[...] secure information transfer, since data are encrypted: this prevents eavesdroppers from obtaining information in transit over the network." - from [http://isscvs.cern.ch:8180/cgi-bin/cvsweb.cgi/%7Echeckout%7E/elfms/quattor/documentation/installation-guide/pdf/quattor-install-guide_1_1.pdf?rev=HEAD&content-type=application/pdf&cvsroot=elfms Quattor Installation and User Guide: Version 1.1.x], page 70</ref>
|
| align="left" |2005-04-01<ref>[http://quattorsw.web.cern.ch/quattorsw/software/quattor/release/ 2005-04-01]</ref>
| align="left" |2013-02-17<ref>[http://quattor.org/news/2013/02/07/quattor-13.02-announce.html 2013-02-17]</ref>
|-
! {{rh}} | [[Radmind]]
| C
| BSD [http://rsug.itd.umich.edu/software/copyright.html]
| {{yes}}<ref>''"SSL certificates can also be used to authenticate both the Radmind server and the managed clients, regardless of DNS or IP-address variation."'' - from [http://www.usenix.org/events/lisa03/tech/full_papers/craig/craig_html/index.html Radmind: The Integration of Filesystem Integrity Checking with Filesystem Management]</ref>
| {{yes}}<ref>''"For network security, Radmind supports SSL-encrypted links. This allows nodes on insecure networks to be updated securely.''" - from [http://www.usenix.org/events/lisa03/tech/full_papers/craig/craig_html/index.html Radmind: The Integration of Filesystem Integrity Checking with Filesystem Management]</ref>
|
| align="left" |2002-03-26<ref>[http://sourceforge.net/project/showfiles.php?group_id=141444&package_id=155276&release_id=392624 2002-03-26]</ref>
| align="left" |2008-10-8 1.13.0<ref>[http://sourceforge.net/project/showfiles.php?group_id=141444 2008-10-8]</ref>
|-
! {{rh}} | [[SmartFrog]]
| Java
| [[GNU Lesser General Public License|LGPL]]
| {{yes}}<ref name="Smartfrog Security">See [http://www.hpl.hp.com/research/smartfrog/papers/sfSecurityTutorial.pdf Using the new SmartFrog Security]</ref>
| {{yes}}<ref name="Smartfrog Security"/>
|
| align="left" |2004-02-11
| align="left" |2009-01-26 3.16.004<ref>[http://sourceforge.net/project/shownotes.php?release_id=656342 2009-01-26]</ref><ref name="Smartfrog Releases">The release the Smartfrog pushes from its [http://wiki.smartfrog.org/wiki/display/sf/Download own site] is 3.17.014 of 2009-09-04</ref>
|-
! {{rh}} | [[Salt (software)|Salt]] <ref>[http://saltstack.org/ Salt] Salt is an open source tool to manage your infrastructure. Easy enough to get running in minutes and fast enough to manage tens of thousands of servers</ref>
| Python<ref>[http://saltstack.org/topics/tutorial.html#salt-dependencies 2.5, 2.6, and 2.7]</ref>
| Apache [http://saltstack.org/topics/index.html#open]
| {{yes}}<ref name="Salt Security">[http://saltstack.org/topics/index.html#building-on-proven-technology See]</ref>
| {{yes}}<ref name="Salt Security"/>
| {{yes}}
| align="left" |2011-03-17 0.6.0<ref>[http://saltstack.org/topics/releases/0.6.0/ 0.6.0]</ref>
| align="left" |2013-03-23 0.14.0<ref>[http://docs.saltstack.com/topics/releases/0.14.0.html 0.14.0]</ref>
|-
! {{rh}} | [[Spacewalk (software)|Spacewalk]]
| Java (C, Perl, Python, [[PL/SQL]])
| GPLv2
| {{yes}}
| {{yes}}
|
| align="left" | 2008-06<ref name="Spacewalk inception date">[https://fedorahosted.org/spacewalk/wiki/SpacewalkFaq#HowlonghasSpacewalkbeenaround Spacewalk inception date; June 2008]</ref>
| align="left" | 2012-03-07 1.7<ref>[https://fedorahosted.org/spacewalk/wiki/ReleaseNotes17 1.7]</ref>
|-
! {{rh}} | [[STAF]]
| [[C++]]
| [[Common Public License|CPL]] [http://staf.sourceforge.net/license.php]
| {{no}}<ref name="Network Trust">Network Trust: Trusts the network, like rsh.</ref><ref name="User-only Auth">User-only Auth: User authenticates to server via password, but uses Network Trust to authenticate user to server, like telnet.</ref>
| {{partial}}<ref>There is a [http://sourceforge.net/tracker/index.php?func=detail&aid=940264&group_id=33142&atid=407384 feature request for a Secure TCP/IP Connection Provider], and one of the [http://sourceforge.net/mailarchive/message.php?msg_name=OF7C30AE4D.50AE13E2-ON862572B4.004D3583-862572B4.004E54FC%40us.ibm.com developers stated] on 2007-04-05 that ''"You will need to download the source code for OpenSSL and point the build files at it. Other than that, it should just work."'', so it looks like there may be working encryption if you build from scratch instead of using the prebuilt binaries. It is unclear what if any authentication building against OpenSSL would give STAF.</ref>
|
| align="left" |1998-02-16<ref>[http://staf.sourceforge.net/history.php 1998-02-16]</ref>
| align="left" |2012-06-29 3.4.10
|-
|}

== Platform support ==
Note: This means platforms on which a recent version of the tool has actually been used successfully, not platforms where it should theoretically work since it's written in good portable C/C++ or an interpreted language. It should also be listed as a supported platform on the project's web site.

{| class="wikitable sortable" style="text-align: center; width: 95%"
! style="width:12em" |
! [[IBM AIX (operating system)|AIX]]
! [[Berkeley Software Distribution|*BSD]]
! [[HP-UX]]
! [[Linux]]
! [[Mac OS X]]
! [[Solaris (operating system)|Solaris]]
! [[Microsoft Windows|Windows]]
! Others
|-
! {{rh}} | [[Ansible (software)|Ansible]]
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{no}}
| {{no}}
|-
! {{rh}} | [[Arusha Project]] (ARK)
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{no}}
| {{yes}}
| {{no}}
| {{no}}
|-
! {{rh}} | [[Bcfg2]]
| {{partial}} <ref>Encap, RPM, and POSIX File Support Only</ref>
| {{yes}} <ref name="FreeBSD">FreeBSD</ref>
| {{no}}
| {{yes}} <ref>Debian, Ubuntu; Gentoo; RPM-based distributions (CentOS, Mandrake, Red Hat, RHEL, SLES, SuSE)</ref>
| {{partial}} <ref>POSIX File, Launchd, and MacPorts Support Only</ref>
| {{yes}}
| {{no}}
| {{no}}
|-
! {{rh}} | [[CFEngine]]
| {{yes}}
| {{yes}} <ref name="FreeBSD"/><ref name="NetBSD">NetBSD</ref><ref name="OpenBSD">OpenBSD</ref>
| {{yes}}
| {{yes}}
| {{yes}} <ref>Support for Darwin, Mac OS X's *BSD base, via [http://cfengine.darwinports.com/ Darwin Ports]</ref>
| {{yes}}
| {{yes}}
| {{yes}}
|-
! {{rh}} | [[cdist]]
| 
| {{yes}}
| 
| {{yes}}
| {{yes}}
| 
| {{no}}
| 
|-
! {{rh}} | [[Chef (software)|Chef]]
| {{yes}} <ref name="opscode.com">[http://www.opscode.com/blog/2011/05/02/chef-0-10-0-released/]</ref>
| {{yes}} 
| {{yes}} <ref name="opscode.com"/>
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}} <ref>[http://wiki.opscode.com/display/chef/Fast+Start+Guide+for+Windows]</ref>
| {{yes}} 
|-
! {{rh}} | [[ISconf]]
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{no}}
| {{no}}
|-
! {{rh}} | Local ConFiGuration system ([[LCFG]])
| {{no}}
| {{no}}
| {{no}}
| {{partial}} <ref>''"Recent versions run on Fedora Core (3, 5, 6). Various people have ported some of the LCFG core to other Linux distributions, such as Debian, but these ports have not been incorporated"''</ref>
| {{partial}} <ref>''"There has been an experimental port to Mac OS X, which does work and includes some Mac-specific components. However, this is not production quality and the lack of uniform packaging system under Mac OS X means that automatic management of installed software is likely to be difficult."''</ref>
| {{partial}} <ref>''"LCFG core has been ported back to Solaris and we are using this in production, although the software has not been packaged for distribution, and is not so well supported"''</ref>
| {{no}}
| {{no}}
|-
! {{rh}} |  [[OCS Inventory NG]] 
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{no}}
|-
! {{rh}} | Open pc server integration ([[Opsi]])
| {{no}}
| {{no}}
| {{no}}
| {{yes}}
| {{no}}
| {{no}}
| {{yes}}
| {{no}}
|-
! {{rh}} | [[PIKT]]
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{no}}
| {{yes}} <ref>Digital Unix; IRIX</ref>
|-
! {{rh}} | [[Puppet (software)|Puppet]]
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
|-
! {{rh}} | [[Quattor]]
| {{no}}
| {{no}}
| {{no}}
| {{yes}}
| {{no}}
| {{yes}}
| {{no}}
| {{no}}
|-
! {{rh}} | [[Radmind]]
| {{yes}}
| {{yes}} <ref name="FreeBSD"/><ref name="NetBSD"/><ref name="OpenBSD"/>
| {{no}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{no}}
|-
! {{rh}} | [[SmartFrog]]
| {{no}} <ref name="JavaUntested">Written in Java, so should in theory work on this platform if there is the appropriate JVM version available for it; however it has not been tested on the platform, which should be considered unsupported.</ref>
| {{no}} <ref name="JavaUntested"/>
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{yes}}
| {{no}} <ref name="JavaUntested"/>
|-
! {{rh}} | [[Salt (Software)|Salt]]
| {{no}} <ref name="Python Untested">Will run anywhere Python runs, but handlers for different platforms are untested.</ref>
| {{yes}}
| {{no}} <ref name="Python Untested"/>
| {{yes}} <ref>[http://saltstack.org/topics/tutorial.html#installing-salt See]</ref>
| {{yes}}
| {{yes}} <ref>
[http://docs.saltstack.org/en/latest/topics/installation/solaris.html Salt was added to the OpenCSW package repository in September of 2012 in version 0.10.2 of Salt]</ref>
| {{yes}}
| {{partial}} <ref name="Python Untested"/>
|-
! {{rh}} | [[Spacewalk (software)|Spacewalk]]
| {{no}} <ref>[https://fedorahosted.org/spacewalk/wiki/BrainBox Support for NIMOL feature request]</ref>
| {{no}}
| {{no}}
| {{yes}} <ref>[https://fedorahosted.org/spacewalk/wiki/WikiStart#Introduction "Spacewalk works with RHEL, Fedora, and other RHEL derivative distributions like CentOS, Scientific Linux, etc"]</ref>
| {{no}}
| {{yes}} <ref>[https://fedorahosted.org/spacewalk/wiki/ManagingSolarisSystems Managing Solaris Systems]</ref>
| {{no}}
| {{no}}
|-
! {{rh}} | [[STAF]]
| {{yes}} <ref>4.3.3+ (Power 32); 5.1+ (Power 32/64)</ref>
| {{yes}} <ref>FreeBSD 4.10 (x86-32); FreeBSD 6.1+ (x86-32)</ref>
| {{yes}} <ref>11.00+ (PA-RISC 32, IA-64)</ref>
| {{yes}} <ref>(x86-32, x86-64, IA-64, PPC 64, zSeries 32/64)</ref>
| {{yes}} <ref>[http://sourceforge.net/tracker/index.php?func=detail&aid=1458480&group_id=33142&atid=407383][http://sourceforge.net/tracker/index.php?func=detail&aid=1338199&group_id=33142&atid=407383 10.2+ (?)]</ref>
| {{yes}} <ref>2.6+ (Sparc 32); 10+ (x86-32, x86-64)</ref>
| {{yes}} <ref>95, 98, Me, NT4, 2000, XP, 2003, Vista (x86-32), 7 (x86-32), 7 (x86-64); 2003, Vista (x86-64); 2004 (IA-64)</ref>
| {{yes}} <ref>OS/400 5.2+ (iSeries 32); z/OS Unix 1.4+</ref>
|-
|}

== Short descriptions ==

Not all tools have the same goal and the same feature set. To help distinguish between all of these software packages, here is a short description of each one.

;[[Ansible (software)|Ansible]]
:Combines multi-node deployment, ad-hoc task execution, and configuration management in one package. Manages nodes over SSH and does not require any additional remote software to be installed on them. Modules work over JSON and standard output and can be written in any language. Uses YAML to express reusable descriptions of systems.

;[[Arusha Project]] (ARK)
:Manage package and configuration specification of hosts via a custom XML description language. Can be used as a front end for [[CFEngine]] or [http://pikt.org/ PIKT]. Provides some collaboration features between administration 'teams'. The last commit dates from [http://sourceforge.net/mailarchive/forum.php?forum_name=ark-commits April 2007].

;[[Bcfg2]]
:Software to manage the configuration of a large number of computers using a central configuration model and the [[client?server model|client?server paradigm]]. The system enables reconciliation between clients' state and the central configuration specification. Detailed reports provide a way to identify unmanaged configuration on hosts. Generators enable code or template based generation of configuration files from a central data repository.

;[[CFEngine]]
:Lightweight agent system. Manages configuration of a large number of computers using the client?server paradigm or stand-alone. Any client state which is different from the policy description is reverted to the desired state. Configuration state is specified via a declarative language. CFEngine's paradigm is convergent [http://www.usenix.org/event/lisa98/full_papers/burgess/burgess.pdf "computer immunology"]

;[[cdist]]
:cdist is a zero dependency configuration management system: It requires only ssh on the target host, which is usually enabled on all Unix-like machines. Only the administration host needs to have Python 3.2 installed.

;[[Chef (software)|Chef]]
:Chef is a configuration management tool written in Ruby, and uses a pure Ruby DSL for writing configuration "recipes". These recipes contain resources that should be put into the declared state. Chef can be used as a client?server tool, or used in "solo" mode.<ref name = "Chef vs Puppet">https://www.scriptrock.com/articles/puppet-vs-chef-battle-wages/</ref>

;[[ISconf]]
:Tool to execute commands and replicate files on all nodes. The nodes do not need to be up; the commands will be executed when they boot. The system has no central server so commands can be launched from any node and they will replicate to all nodes. It implements many of the ideas in "[http://www.infrastructures.org/papers/turing/turing.html Why Order Matters: Turing Equivalence in Automated Systems Administration]".

;Local ConFiGuration system ([[LCFG]])
:LCFG manages the configuration with a central description language in XML, specifying resources, aspects and profiles. Configuration is deployed using the client?server paradigm. Appropriate scripts on clients (called ''components'') transcribe the resources into configuration files and restart services as needed.

;Open pc server integration ([[Opsi]])
:Open pc server integration (Opsi) is [[desktop management]] software for [[Microsoft Windows|Windows]] clients based on [[Linux]] servers. It provides automatic [[software deployment]] (distribution), [[installation (computer programs)#Types|unattended installation]] of OS, [[patch (computing)|patch]] management, hard- and software inventory, license management and [[software asset management]], and administrative tasks for the [[configuration management]].<ref>http://www.opsi.org/features/</ref>

;[[PIKT]]
:PIKT is foremost a monitoring system that also does configuration management. "''PIKT consists of a sophisticated, [[feature-rich]] file preprocessor; an innovative scripting language with unique labor-saving features; a flexible, centrally directed process scheduler; a customizing file installer; a collection of powerful command-line extensions; and other useful tools.''" [http://pikt.org/]

;[[Puppet (software)|Puppet]]
:Puppet consists of a custom declarative language to describe system configuration, distributed using the client?server paradigm (using [[XML-RPC]] protocol in older versions, with a recent switch to [[Representational State Transfer|REST]]), and a library to realize the configuration. The resource abstraction layer enables administrators to describe the configuration in high-level terms, such as users, services and packages. Puppet will then ensure the server's state matches the description. There is support in Puppet for using a pure Ruby DSL as an alternative configuration language in version 2.6.0 and later.<ref name = "Chef vs Puppet">https://www.scriptrock.com/articles/puppet-vs-chef-battle-wages/</ref>

;[[Quattor]]
:The quattor information model is based on the distinction between the desired state and the actual state. The desired state is registered in a fabric-wide configuration database, using a specially designed configuration language called [[Pan (programming language)|Pan]] for expressing and validating configurations, composed out of reusable hierarchical building blocks called templates. Configurations are propagated to and cached on the managed nodes. [http://quattor.web.cern.ch/quattor/][https://trac.lal.in2p3.fr/Quattor/wiki/Web?redirectedfrom=Web/Overview]

;[[Radmind]]
:Radmind manages hosts configuration at the file system level. In a similar way to [[Tripwire (software)|Tripwire]] (and other configuration management tools), it can detect external changes to managed configuration, and can optionally reverse the changes. Radmind does not have higher-level configuration element (services, packages) abstraction. A graphical interface is available (only) for Mac OS X.

;[[Salt (software)|Salt]]
:Salt started out as a tool for remote server management.  As its usage has grown, it has gained a number of extended features, including a more comprehensive mechanism for host configuration.  This is a relatively new feature facilitated through the Salt States component.  With the traction that Salt has gotten in the last bit, the support for more features and platforms will continue to grow.
  
;[[SmartFrog]]
:Java-based tool to deploy and configure applications distributed across multiple machines. There is no central server; you can deploy a .SF configuration file to any node and have it distributed to peer nodes according to the distribution information contained inside the deployment descriptor itself.

;[[Spacewalk (software)|Spacewalk]]
:Spacewalk is an open source Linux and Solaris systems management solution and is the upstream project for the source of Red Hat Network Satellite. Spacewalk works with RHEL, Fedora, and other RHEL derivative distributions like CentOS, Scientific Linux, etc. We are working on getting it packaged for inclusion in Fedora. It allows you to inventory your systems (hardware and software information, install and update software on your systems, collect and distribute your custom software packages into manageable groups, provision your systems (from bare metal via KOAN and cobbler), manage and deploy configuration files to your systems, monitor your systems, provision virtual guests, start/stop/configure virtual guests and delegate all of these actions to organisations with fine grain local or LDAP user controls and system entitlements.

==References==
{{Reflist}}

{{DEFAULTSORT:Comparison Of Open Source Configuration Management Software}}
[[Category:Configuration management| ]]
[[Category:Software comparisons|Open source configuration management software]]
[[Category:Free software lists and comparisons|Configuration management software]]