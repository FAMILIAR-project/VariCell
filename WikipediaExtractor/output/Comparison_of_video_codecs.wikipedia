{{Cleanup|date=June 2007}}

A [[video codec]] is [[software]] or a device that provides [[encoding]] and [[Code|decoding]] for [[digital video]], and which may or may not include the use of [[video compression]] and/or decompression. 

The compression may employ [[lossy data compression]], so that quality-measurement issues become important. Shortly after the [[compact disc]] became widely available as a digital-format replacement for analog audio, it became feasible to also store and use video in digital form. A variety of technologies soon emerged to do so. The primary goal for most methods of compressing video is to produce video that most closely approximates the fidelity of the original source, while simultaneously delivering the smallest file-size possible. However, there are also several other factors that can be used as a basis for comparison.

== Introduction to comparison ==

The following characteristics are compared in video codecs comparisons:
* '''Video quality per bitrate''' (or range of [[bitrate]]s). Commonly [[video quality]] is considered the main characteristic of codec comparisons. Video quality comparisons can be ''subjective'' or ''objective''.
* '''Performance characteristics''' such as compression/decompression speed, supported profiles/options, supported resolutions, supported rate control strategies, etc.
* '''General software characteristics''' &ndash; for example:
** Manufacturer
** Supported OS ([[Linux]], [[Mac OS]], [[Microsoft Windows|Windows]])
** Version number
** Date of release
** Type of license (commercial, free, [[open source]])
** Supported interfaces (VfW, [[DirectShow]], etc.)
** Price (value for money, volume discounts, etc.)

== Video quality ==

The quality the codec can achieve is heavily based on the compression format the codec uses. A codec is not a format, and there may be multiple codecs that implement the same compression specification &ndash; for example, MPEG-1 codecs typically do not achieve quality/size ratio comparable to codecs that implement the more modern H.264 specification. But quality/size ratio of output produced by different implementations of the same specification can also vary.

Prior to comparing codec video-quality, it is important to understand that every codec can give a varying degree of quality for a given set of frames within a video sequence. Numerous factors play a role in this variability. First, all codecs have a [[bitrate control]] mechanism that is responsible for determining the bitrate and quality on a per-frame basis.  A difference between [[variable bitrate]] (VBR) and [[constant bitrate]] (CBR) creates a trade-off between a consistent quality over all frames, on the one hand, and a more constant bitrate, which is required for some applications, on the other. Second, some codecs differentiate between different types of frames, such as [[key frame]]s and non-key frames, differing in their importance to overall visual quality and the extent to which they can be compressed. Third, quality depends on prefiltrations, which are included on all present-day codecs. Other factors may also come into play.

For a sufficiently long clip, it is possible to select sequences that have suffered little from the compression, and sequences that have suffered heavily, especially if [[Constant bitrate|CBR]] has been used, whereby the quality between frames can vary highly due to different amounts of compression needed to achieve a constant bitrate. So, in a given long clip, such as a full-length movie, any two codecs may perform quite differently on a particular sequence from the clip, while the codecs may be approximately equal (or the situation reversed) in quality over a wider sequence of frames. Press-releases and amateur forums sometimes select sequences known to favor a particular codec or style of rate-control in reviews {{Citation needed|date=November 2007}}.

=== Objective video quality===
{{Main|video quality}}

Objective video evaluation techniques are mathematical models that approximate results of subjective quality assessment, but are based on criteria and metrics that can be measured objectively and automatically evaluated by a computer program. Objective methods are classified based on the availability of the original video signal, which is considered to be of high quality (generally not compressed). Therefore, they can be classified as:
* '''Full reference''' methods (FR), where the whole original video signal is available
* '''Reduced reference''' methods (RR), where only partial information of the original video is available, and
* '''No-reference''' methods (NR), where the original video is not available at all.

The main FR metrics are:
;[[Peak signal-to-noise ratio]] (PSNR): The most widely used video quality metric during the last 20 years (used approximately in 99% of scientific papers and in 20% of marketing materials). However, the validity of this metric is limited. It is conclusive only when the same codec (or codec type) and content is being compared.<ref>Thomos, N., Boulgouris, N. V., & Strintzis, M. G. (2006, January). Optimized Transmission of JPEG2000 Streams Over Wireless Channels. IEEE Transactions on Image Processing , 15 (1).</ref><ref>Xiangjun, L., & Jianfei, C. ROBUST TRANSMISSION OF JPEG2000 ENCODED IMAGES OVER PACKET LOSS CHANNELS. ICME 2007 (pp.&nbsp;947&ndash;950). School of Computer Engineering, Nanyang Technological University.</ref>
;[[Structural similarity]] (SSim.): A new metric (suggested in 2004) that shows better results than PSNR at the cost of a reasonable increase in computational complexity.
;VQuad-HD an [[ITU-T]] J.341 standard: The new standard was recently (Jan 2011) approved by ITU-T [http://www.itu.int/rec/T-REC-J.341-201101-I/en as J.341]. The new VQuad-HD? algorithm was developed by [[Swissqual]] in 2008&ndash;2010. It was the best-performing model in the HDTV competition to find the new standard that was organized by the independent and non-commercial Video Quality Expert Group (VQEG). More information on VQuad-HD can be found in the technical white paper "Video Quality Measurement for High Definition Video Signals," available for download from: [http://www.vquad-hd.info/index.php/pages/downloads.html white paper]

Some other metrics have been suggested by Video Quality Experts Group (VQEG), private companies, and universities, but are not widespread.

The main comparison method is the so-called ''RD-curve'' (rate/distortion chart), in which a metric value is plotted against the Y-axis and the bitrate against the X-axis.

Some example NR metrics are:
* '''Blocking measure''' ? measurement power of so-called ''blocking artefacts'' (extremely noticeable without deblocking filter usage on low bitrates)
* '''Blurring measure''' ? measurement of common video blurring (washout)

=== Subjective video quality===
{{Main|Subjective video quality}}

This is concerned with how video is perceived by a viewer, and designates his or her opinion on a particular video sequence. Subjective video quality tests are quite expensive with regard to time (preparation and running) and human resources.

There is an enormous number of ways of showing video sequences to experts and of recording their opinions. A few of them have been standardized. They are thoroughly described in ITU-R recommendation BT.500.

The following subjective video quality comparison methods are used:
* Double Stimulus Impairment Scale (DSIS) ? suggested in [[ITU-R]] BT.500-11.
* Double Stimulus Continuous Quality Scale (DSCQS) type I and type II ? suggested in ITU-R BT.500-11
* Stimulus Comparison Adjectival Categorical Judgement (SCACJ) ? suggested in ITU-R BT.500-11
* Subjective Assessment Method for Video Quality evaluation (SAMVIQ)
* MSU Continuous Quality Evaluation (MSUCQE)
	
The reason for measuring subjective video quality is the same as for measuring the [[Mean Opinion Score]] for audio. Opinions of experts can be averaged, and the average mark is usually given with confidence interval. Additional procedures can be used for averaging. For example, experts who give unstable results may be rejected (for instance, if their correlation with average opinion is low).

In case of video codecs, this is a very common situation. When codecs with similar objective results show results with different subjective results, the main reasons can be:

* '''Pre- and postfilters''' are widely used in codecs. Codecs often use prefilters such as [[video denoising]], deflicking, deshacking, etc. Denoising and deflicking normally maintain PSNR value while increasing visual quality (the best slow denoising filters also increase PSNR on medium and high bitrates). Deshacking greatly decreases PSNR, but increases visual quality. Postfilters show similar characteristics ? deblocking and deringing maintain PSNR, but increase quality; graining (suggested in [[H.264]]) essentially increases video quality, especially on big plasma screens, but decreases PSNR.
: ''Note: All filters increase compression/decompression time, so they enhance visual quality but decrease the speed of coding an decoding.''
* '''Motion estimation (ME) search strategy''' can also cause different visual quality for the same PSNR. So-called ''true motion'' search commonly will not reach minimum [[sum of absolute differences]] (SAD) values in codec ME, but may result in better visual quality. Such methods also require more compression time.
* '''Rate control strategy'''. VBR commonly cause better visual quality marks than CBR for the same average PSNR values for sequences.

It is difficult to use long sequences for subjective testing. Commonly, three or four ten-second sequences are used, while full movies are used for objective metrics. Sequence selection is important ? those sequences that are similar to the ones used by developers to tune their codecs are more competitive.

== Performance comparison ==

===Speed comparison ===
{{Main|Frame rate}}
Number of [[frames per second]] (''FPS'') commonly used for compression/decompression speed measurement.

The following issues should be considered when estimating probable codec performance differences:
* '''Decompression (sometimes compression) frame time uniformity'''. Big differences in this value can cause annoyingly jerky playback.
* '''[[SIMD]] support''' by processor and codec ? e.g., [[MMX (instruction set)|MMX]], [[Streaming SIMD Extensions|SSE]], [[SSE2]], each of which change CPU performance on some kinds of tasks (often including those with which codecs are concerned).
* '''Multi-threading support''' by processor and codec (sometimes turning on [[Hyper-threading]] support (if available on a particular CPU) causes codec speed to decrease)
* '''[[RAM]] speed''' (generally important for most codec implementations)
* '''Processor cache size''' (low values sometimes cause serious speed degradation, e.g. for CPUs with low cache such as several of the Intel [[Celeron]] series.)
* '''[[GPGPU|GPU]] usage''' by codec ? some codecs can drastically increase their performance by taking advantage of GPU resources.

So, for example, codec A (being optimized for memory usage &ndash; i.e., uses less memory) may, on modern computers (which are typically not memory-limited), give slower performance  than codec B. Meanwhile, the same pair of codecs may give opposite results if running on an older computer with reduced memory (or cache) resources.

=== Profiles support ===
{{Main|H.264}}

Modern standards define a wide range of features and require very substantial software or hardware efforts and resources for their implementation. Only selected ''profiles'' of a standard are typically supported in any particular product. (This is very common for H.264 implementations for example.)

The H.264 standard includes the following seven sets of capabilities, which are referred to as ''profiles'', targeting specific classes of applications:
* '''Baseline Profile (BP)''': Primarily for lower-cost applications with limited computing resources, this profile is used widely in videoconferencing and mobile applications.
* '''Main Profile (MP)''': Originally intended as the mainstream consumer profile for broadcast and storage applications, the importance of this profile faded when the High profile (HiP) was developed for those applications.
* '''Extended Profile (XP)''': Intended as the streaming video profile, this profile has relatively high compression capability and some extra tricks for robustness to data losses and server stream switching.
* '''High Profile (HiP)''': The primary profile for broadcast and disc storage applications, particularly for high-definition television applications. (This is the profile adopted into [[HD DVD]] and [[Blu-ray]] Disc, for example.)
* '''High 10 Profile (Hi10P)''': Going beyond today's mainstream consumer product capabilities, this profile builds on top of the High Profile, adding support for up to 10 bits per sample of decoded picture precision.
* '''High 4:2:2 Profile (Hi422P)''': Primarily targeting professional applications that use interlaced video, this profile builds on top of the High 10 Profile, adding support for the 4:2:2 chroma sampling format while using up to 10 bits per sample of decoded picture precision.
* '''High 4:4:4 Predictive Profile (Hi444PP)''': This profile builds on top of the High 4:2:2 Profile, supporting up to 4:4:4 chroma sampling, up to 14 bits per sample, and additionally supporting efficient lossless region coding and the coding of each picture as three separate color planes.
* '''Multiview High Profile''': This profile supports two or more views using both inter-picture (temporal) and MVC inter-view prediction, but does not support field pictures and macroblock-adaptive frame-field coding.

The standard also contains four additional ''all-Intra profiles'', which are defined as simple subsets of other corresponding profiles.  These are mostly for professional (e.g., camera and editing system) applications:
* '''High 10 Intra Profile''': The High 10 Profile constrained to all-Intra use.
* '''High 4:2:2 Intra Profile''': The High 4:2:2 Profile constrained to all-Intra use.
* '''High 4:4:4 Intra Profile''': The High 4:4:4 Profile constrained to all-Intra use.
* '''CAVLC 4:4:4 Intra Profile''': The High 4:4:4 Profile constrained to all-Intra use and to [[CAVLC]] entropy coding (i.e., not supporting [[CABAC]]).

Moreover, the standard now also contains three [[Scalable Video Coding]] profiles.
* '''Scalable Baseline Profile''': A scalable extension of the Baseline profile.
* '''Scalable High Profile''': A scalable extension of the High profile.
* '''Scalable High Intra Profile''': The Scalable High Profile constrained to all-Intra use.

An accurate comparison of codecs must take the profile variations within each codec into account.

''See also [[MPEG-2#Profiles and Levels|MPEG-2 Profiles and Levels]].''

=== Supported rate control strategies ===
{{Main|Rate distortion theory}}

Videocodecs rate control strategies can be classified as:
* [[Variable bitrate]] (''VBR'') and
* [[Constant bitrate]] (''CBR'').

Variable bitrate (VBR) is a strategy to maximize the visual video quality and minimize the bitrate. On fast-motion scenes, a variable bitrate uses more bits than it does on slow-motion scenes of similar duration, yet achieves a consistent visual quality. For real-time and non-buffered video streaming when the available bandwidth is fixed &ndash; e.g. in videoconferencing delivered on channels of fixed bandwidth &ndash; a constant bitrate (CBR) must be used.

CBR is commonly used for videoconferences, satellite and cable broadcasting. VBR is commonly used for video CD/DVD creation and video in programs.

== Software characteristics ==

=== Codecs list ===

{| class="wikitable sortable" style="text-align: center"
|+General video codec information ? creator/company, license/price, etc.
|-
! [[Video codec|Codec]]
! Creator/Maintainer
! First public release date
! Latest stable version
! [[Software license|License]]
! [[Patent]]ed compression formats
! Compression method
! [[OpenCL]] support
! [[nVidia]] [[CUDA]] support
! [[ATI (brand)|ATI]] Stream/[[AMD]] APP support
! [[Intel]] [[Advanced Vector Extensions|AVX]] support
! [[Intel]] [[Quick Sync Video]] support
|-
! [[libtheora]] (Theora)
| [[Xiph.Org Foundation|Xiph.org]]
| 2002-09-25
| 1.1.1 (2009)<ref>Xiph.Org Foundation (2009) [http://www.theora.org/news/ Theora development website - news], Retrieved 2009-10-06</ref>
| {{Free|[[BSD licenses|BSD-style]]<ref name="theora">[http://www.theora.org/theorafaq.html Theora.org FAQ]: [http://www.theora.org/theorafaq.html#14 what is the license for Theora?]</ref>}}
| {{Free|Patented, but freely licensed{{Ref label|theora_patent|*|*}}}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! dirac-research ([[Dirac (codec)|Dirac]])
| [[BBC Research|BBC Research Department]]
| 2008-09-17
| 1.0.2 (2009)<ref name="diracvideo">[http://www.diracvideo.org/ Dirac Video Compression], Retrieved on 2009-08-08</ref>
| {{Free|[[Mozilla Public Licence|MPL 1.1]], [[GNU General Public License|GNU GPL]] 2, [[GNU Lesser General Public License|GNU LGPL]] 2.1}}
| {{Free|none}}
| [[Lossy]]/[[lossless]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! Schr?dinger ([[Dirac (codec)|Dirac]])
| David Schleef
| 2008-02-22
| 1.0.11 (2012)<ref name="diracvideo" />
| {{Free|[[Mozilla Public Licence|MPL 1.1]], [[GNU General Public License|GNU GPL]] 2, [[GNU Lesser General Public License|GNU LGPL]] 2, [[MIT License]]}}
| {{Free|none}}
| [[Lossy]]/[[lossless]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[x264]]
| x264 team
| 2003
| r2019 (2011)<ref>[http://www.x264.nl/ x264 - Jarod's unofficial builds for Windows], Retrieved on 2010-11-25</ref><ref>[http://www.videolan.org/developers/x264.html x264 - a free h264/avc encoder], Retrieved on 2011-07-10</ref>
| {{Free|[[GNU General Public License|GNU GPL]]}}
| {{nonfree|MPEG-4 AVC/[[H.264]]}}
| [[Lossy]]/[[lossless]]
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{Unknown}}
|-
! [[Xvid]]
| Xvid team
| 2001
| 1.3.2 (2011)<ref>[http://www.xvid.org/ Xvid.org], Retrieved on 2011-05-18</ref>
| {{Free|[[GNU General Public License|GNU GPL]]}}
| {{nonfree|MPEG-4 ASP}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[FFmpeg]] ([[libavcodec]])
| FFmpeg team
| 2000
| 1.0 (2012)<ref>[http://www.ffmpeg.org/ FFmpeg.org], Retrieved on 2009-08-09</ref>
| {{Free|[[GNU Lesser General Public License|GNU LGPL]]}}
| {{nonfree|MPEG-1, MPEG-2, MPEG-4 ASP, H.261, H.263, VC-3, WMV7, WMV8, MJPEG, MS-MPEG-4v3, DV, Sorenson codec etc.}}
| [[Lossy]]/[[lossless]]
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
|-
! [[FFavs]] ([[libavcodec]])
| FFavs team
| 2009
| 0.0.3<ref>[http://www.ffavs.net FFavs], Retrieved on 2009-08-08</ref>
| {{Free|[[GNU Lesser General Public License|GNU LGPL]]}}
| {{nonfree|MPEG-1, MPEG-2, MPEG-4 ASP etc.}}
| [[Lossy]]/[[lossless]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[FORscene#Blackbird|Blackbird]]
| Forbidden Technologies plc
| 2006-01
| 2
| {{Proprietary}}
| {{nonfree|Blackbird}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[DivX]]
| [[DivX, Inc.]]
| 2001
| DivX Plus (2010)<ref>{{cite web|url=http://www.divx.com/|title=DivX, Inc.|publisher=DivX, Inc.|accessdate=19 May 2011}}</ref> 
| {{Proprietary}}
| {{nonfree|[[MPEG-4 Part 2|MPEG-4 ASP]], H.264}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! {{nowrap|[[DivX&nbsp;<!--THE SMILEY REALLY BELONGS HERE-->;-)<!--DO NOT REMOVE THE SMILEY-->]]}}
| a hack of Microsoft's MPEG-4v3 codec<ref>VirtualDub [http://www.virtualdub.org/docs_codecs.html VirtualDub documentation: codecs], Retrieved on 2009-08-08</ref><ref>FOURCC.org [http://www.fourcc.org/codecs.php Video Codecs - Compressed Formats], Retrieved on 2009-08-08</ref>
| 1998
| 3.20 alpha<ref>Tom's Hardware (2001-10-22) [http://www.tomshardware.com/reviews/mpeg,379-7.html A Tough Choice: DivX 3.20a Codec Still Better Than DivX 4.01 Codec], Retrieved on 2009-08-08</ref> (2000)
| {{Proprietary}}
| {{nonfree|Microsoft's MPEG-4v3 (not MPEG-4 compliant)}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[3ivx]]
| 3ivx Technologies Pty. Ltd.
| 2001
| 5.0.2 (2007)<ref>[http://www.3ivx.com/ 3ivx], Retrieved on 2009-08-09</ref>
| {{Proprietary}}
| {{nonfree|[[MPEG-4 Part 2|MPEG-4 ASP]]}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[Nero Digital]]
| [[Nero AG]]
| 2003
| {{unk}}
| {{Proprietary}}
| {{nonfree|[[MPEG-4 Part 2|MPEG-4 ASP]], [[H.264]]<ref>Nero AG [http://www.nero.com/eng/support-faq.html?s=sub&t=Nero%20Digital What is Nero Digital], Retrieved on 2009-08-08</ref>}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[ProRes 422]] / [[ProRes 4444]]
| [[Apple Inc.]]
| 2007
|
| {{Proprietary}}
| {{unk}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[Sorenson codec|Sorenson Video]]
| Sorenson Media
| 1998
|
| {{Proprietary}}
| {{nonfree|Sorenson Video}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[Sorenson codec|Sorenson Spark]]
| Sorenson Media
| 2002
|
| {{Proprietary}}
| {{nonfree|Sorenson Spark}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[VP3]]
| [[On2 Technologies]]
| 2000
|
| {{Free|[[BSD licenses|BSD-style]]<ref name="theora"/>}}
| {{Free|Patented, but freely licensed{{Ref label|theora_patent|*|*}}}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[VP4]]
| [[On2 Technologies]]
| 2001
|
| {{Proprietary}}
| {{nonfree|VP4}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[VP5]]
| [[On2 Technologies]]
| 2002
|
| {{Proprietary}}
| {{nonfree|VP5}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[VP6]]
| [[On2 Technologies]]
| 2003
|
| {{Proprietary}}
| {{nonfree|VP6}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[VP7]]
| [[On2 Technologies]]
| 2005
|
| {{Proprietary}}
| {{nonfree|VP7}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[VP8]]
| [[On2 Technologies]] (now owned by [[Google]])
| 2008
|
| {{Free|[[BSD licenses|BSD-style]]}}
| {{free|Patented, but freely licensed}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[DNxHD codec|DNxHD]]
| [[Avid Technology]]
| 2008
|
| {{Proprietary}}
| {{nonfree|VC-3}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[Cinema Craft Encoder]] SP2
| Custom Technology Corporation
| 2000
| 1.00.01.09 (2009)<ref>Custom Technology Corporation [http://www.cinemacraft.com/eng/download.html#sp2 CINEMA CRAFT - Download], Retrieved on 2009-08-11</ref>
| {{Proprietary}}
| {{nonfree|MPEG-1, MPEG-2}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[TMPGEnc]] Free Version
| Pegasys Inc.
| 2001
| 2.525.64.184 (2008)<ref>Pegasys Inc. [http://www.tmpgenc.net/en/index.html What Is New], Retrieved on 2009-08-11</ref>
| {{Proprietary}}
| {{nonfree|MPEG-1, MPEG-2}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[Windows Media Encoder]]
| Microsoft
| 1999
| 9 (2003) (WMV3 in [[Fourcc|FourCC]])
| {{Proprietary}}
| {{nonfree|[[WMV]], [[VC-1]], (in early versions [[MPEG-4 Part 2]] and not MPEG-4 compliant MPEG-4v3, MPEG-4v2)}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[Cinepak]]
| Created by SuperMac, Inc.
Currently maintained by Compression Technologies, Inc.<ref>[http://www.cinepak.com/begin.html Compression Technologies, Inc.], current maintainer of Cinepak</ref>
| 1991
| 1.10.0.26 (1999)
| {{Proprietary}}
| {{unk}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[Indeo Video]]
| [[Intel Corporation]], currently offered by Ligos Corporation
| 1992
| 5.2
| {{Proprietary}}
| {{nonfree|Indeo Video}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[TrueMotion S]]
| [[The Duck Corporation]]
| 1995
|
| {{Proprietary}}
| {{nonfree|TrueMotion S}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[RealVideo]]
| [[RealNetworks]]
| 1997
| RealVideo 10<ref>RealNetworks [http://www.realnetworks.com/products/codecs/realvideo.html Products - Codecs], Retrieved on 2009-08-07</ref>
| {{Proprietary}}
| {{nonfree|[[H.263]], RealVideo}}
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[Huffyuv]]
| Ben Rudiak-Gould
| 2000
| 2.1.1 (2003)<ref>[http://neuron2.net/www.math.berkeley.edu/benrg/huffyuv.html Huffyuv v2.1.1], Retrieved on 2009-08-09</ref>
| {{Free|[[GNU General Public License|GNU GPL]] 2}}
| {{Free|none}}
| [[Lossless]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[Lagarith]]
| Ben Greenwood
| 2004-10-04
| 1.3.26 (2011-09-25)<ref>[http://lags.leetcode.net/codec.html Lagarith Lossless Video Codec], Retrieved on 2009-08-09</ref>
| {{Free|[[GNU General Public License|GNU GPL]] 2}}
| {{Free|none}}
| [[Lossless]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|-
! [[MainConcept]]
| MainConcept GmbH
| 1993
| 8.8.0 (2011)
| {{Proprietary}}
| {{nonfree|MPEG-1, MPEG-2, H.264/AVC, H.263, VC-3, MPEG-4 Part 2, DV, MJPEG etc.}}
| [[Lossy]]
| {{yes}}<ref>[http://www.mainconcept.com/products/sdks/gpu-acceleration/opencltm-h264avc.html]</ref>
| {{yes}}<ref>[http://www.mainconcept.com/press/single-view/article/will-present-latest-gpu-cuda-encoding-at-nvidia-technology-conference.html]</ref><ref>[http://www.mainconcept.com/products/sdks/gpu-acceleration/cuda-h264avc.html]</ref>
| {{Unknown}}
| {{Unknown}}
| {{Yes}}<ref>[http://www.mainconcept.com/products/partner-products/intel/h264avc-encoder-sdk.html]</ref>
|-
! [[Elecard Group|Elecard]]
| [[Elecard Group|Elecard]]
| 2008
| G4 (2010)<ref>[http://www.elecard.com/en/products/development/sdk/codec-sdk.html]</ref>
| {{Proprietary}}
| MPEG-1, MPEG-2, MPEG-4, AVC
| [[Lossy]]
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
| {{Unknown}}
|}

{{note label|theora_patent|*|*}} The [[Xiph.Org Foundation]] has negotiated an irrevocable free license to Theora and other VP3-derived codecs for everyone, for any purpose.<ref>Theora.org FAQ: [http://www.theora.org/faq/#24 isn't VP3 a patented technology?]</ref>
{{note label|DivX_Plus|*|*}} DivX Plus is also known as DivX 8. The latest stable version for Mac is DivX 7 for Mac.

=== Native operating system support ===
Note that operating system support does not mean whether video encoded with the codec can be played back on the particular operating system &ndash; for example, video encoded with the DivX codec is playable on Unix-like systems using free MPEG-4 ASP decoders (FFmpeg MPEG-4 or Xvid), but the DivX codec (which is a software product) is only available for Windows and Mac&nbsp;OS&nbsp;X.

{| class="wikitable sortable" style="text-align: center"
|+Encoder Operating System Support
|-
! [[Video codec|Codec]]
! [[Mac OS X]]
! other [[Unix]] & [[Unix-like]]
! [[Microsoft Windows|Windows]]
|-
| [[3ivx]]
| {{yes}}
| {{yes}}
| {{yes}}
|-
| [[FORscene#Blackbird|Blackbird]]
| {{yes}}
| {{yes}}
| {{yes}}
|-
| [[Cinepak]]
| {{yes}}
| {{no}}
| {{yes}}
|-
| [[DivX]]
| {{yes}}
| {{no}}
| {{yes}}
|-
| [[FFmpeg]]
| {{yes}}
| {{yes}}
| {{yes}}
|-
| [[RealVideo]]
| {{yes}}
| {{yes}}
| {{yes}}
|-
| Schr?dinger ([[Dirac (video compression format)|Dirac]])
| {{yes}}
| {{yes}}
| {{yes}}
|-
| [[Sorenson codec|Sorenson Video 3]]
| {{yes}}
| {{no}}
| {{yes}}
|-
| [[Theora]]
| {{yes}}
| {{yes}}
| {{yes}}
|-
| [[x264]]
| {{yes}}
| {{yes}}
| {{yes}}
|-
| [[Xvid]]
| {{yes}}
| {{yes}}
| {{yes}}
|-
| [[Elecard Group|Elecard]]
| {{no}}
| {{no}}
| {{yes}}
|}

=== Technical details ===
{|{| class="wikitable" style="text-align: center;"
|-
! [[Video codec|Codec]]
! Compression type
! [[Algorithm|Basic algorithm]]
! Highest supported [[bitrate]]
! Highest supported [[Image resolution|resolution]]
! [[Variable frame rate]]
|-
| [[FORscene#Blackbird|Blackbird]]
| [[Lossy compression]]
| {{unk}}
| {{unk}}
| 384?288 (PAL), 320?240 (NTSC)
| {{yes}}
|-
| [[Cinepak]]
| Lossy compression
| [[Vector quantization]]<ref>[http://www.csse.monash.edu.au/~timf/videocodec/cinepak.txt Technical description of the Cinepak codec]</ref>
| {{unk}}
| {{unk}}
| {{unk}}
|-
| [[Dirac (codec)|Dirac]]
| Lossy/[[Lossless compression|Lossless]] compression
| [[Wavelet compression]]
| Unlimited<ref name="var">Frame rate, resolution, etc. are coded as variable length data.</ref>
| Unlimited<ref name="var" />
| {{yes}}
|-
| [[Sorenson codec|Sorenson 3]]
| Lossy compression
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
|-
| [[Theora]]
| Lossy compression
| [[Discrete cosine transform]]
| 2&nbsp;[[Gibibit per second|Gibit/s]]
| 1,048,560?1,048,560<ref name="theora spec">{{PDFlink|[http://www.theora.org/doc/Theora_I_spec.pdf Theora format specification]|827&nbsp;KB}}</ref><ref>Requires about 3 terabytes per uncompressed frame at maximum resolution (pg 37, Theora I Specification. March 7, 2006)</ref>
| {{partial|Via chaining}}{{Ref label|theora_vfr|*|*}}
|-
| [[RealVideo]]
| Lossy compression
| Discrete cosine transform
| {{unk}}
| {{unk}}
| {{yes}}
|-
| [[Elecard Group|Elecard]]
| [[Lossy compression]]
| Unknown
| Unlimited
| 16k
| {{yes}}
|}

{{note label|theora_vfr|*|*}} Theora streams with different frame rates can be chained in the same file, but each stream has a fixed frame rate.<ref name="theora spec"/>

== Freely available codecs comparisons ==

List of freely available comparisons and their content description:

{| class="wikitable" style="width: auto; font-size: smaller;"
|-
! Name of comparison
! Type of comparison
! Date(s) of publication
! List of compared codecs
! Comments
|-
| [http://www.doom9.org/codec-comparisons.htm Series of Doom9 codec comparisons]
| Series of '''subjective''' comparison of popular codecs
|
* 2002
* 2003
* 2005
|
* DivX4.12, On2 VP3, XviD 1/25 and WMV8 and DivX5.01, XviD 3/27 and ON2 VP4 ? at first version
* Dirac, Elecard AVC HP, libavcodec MPEG-4, NeroDigital ASP, QuickTime 7, Snow, Theora, VideoSoft H.264 HP, XviD 1.1 beta 2 ? in last one
| Subjective comparison with convenient visualization
|-
| [http://compression.ru/video/codec_comparison/index_en.html Series of MSU annual H.264 codecs comparisons]
| Series of '''objective''' H.264 codecs comparisons with MPEG-4 ASP reference
|
* 2004
* 2005 Jan.
* 2005 Dec.
* 2006 Dec.
* 2007 Dec.
* 2009 May
* 2010 Apr.
|
* 2005 (Jan.): Mpegable AVC, Moonlight H.264, MainConcept H.264, Fraunhofer IIS, Ateme MPEG-4 AVC/H.264, Videosoft H.264, DivX Pro 5.1.1 (Not 264! Used for comparison with H.264 codecs as well tuned codec from previous generation MPEG-4 ASP)
* 2005 (Dec.): DivX 6.0 (MPEG-4 ASP reference), ArcSoft H.264, Ateme H.264, ATI H.264, Elecard H.264, Fraunhofer IIS H.264,  VSS H.264, x264
* 2006: DivX 6.2.5 (MPEG-4 ASP reference), MainConcept H.264, Intel H.264, VSS H.264, x264, Apple H.264, (partially), Sorenson H.264 (partially)
* 2007: XviD (MPEG-4 ASP codec), MainConcept H.264, Intel H.264, x264, AMD H.264, Artemis H.264
* 2009: XviD (MPEG-4 ASP codec), Dicas H.264, Elecard H.264, Intel IPP H.264, MainConcept H.264, x264
* 2010: XviD (MPEG-4 ASP codec), DivX H.264, Elecard H.264, Intel MediaSDK AVC/H.264, MainConcept H.264, Microsoft Expression, Encoder, Theora, x264
| Detailed objective comparisons
|-
| [http://compression.ru/video/codec_comparison/index_en.html Series of Lossless Video Codecs Comparison]
| Two '''size and time comparisons''' of lossless codecs (with lossless checking)
|
* 2004 Oct.
* 2007 Mar.
|
* 2004 (14 codecs): Alpary v2.0, AVIzlib v2.2.3, CamStudio GZIP v1.0, CorePNG v0.8.2, FFV1 ffdshow 08/08/04, GLZW v1.01, HuffYUV v2.1.1, Lagarith v1.0.0.1, LEAD JPEG v1.0.0.1, LOCO v0.2, MindVid v1.0 beta 1, MSUlab beta v0.2.4, MSUlab v0.5.2, PicVideo JPEG v.2.10.0.29, VBLE beta
* 2007 (16 codecs): Alpary, ArithYuv, AVIzlib, CamStudio GZIP, CorePNG, FastCodec, FFV1, Huffyuv, Lagarith, LOCO, LZO, MSU Lab, PICVideo, Snow, x264, YULS
| in 2007 ? more detailed report with new codecs including first standard H.264 (x264)
|-
| [http://compression.ru/video/codec_comparison/mpeg-4_en.html MSU MPEG-4 codecs comparison]
| '''Objective''' comparison of MPEG-4 codecs
|
* 2005 Mar.
| DivX 5.2.1, DivX 4.12, DivX 3.22, MS MPEG-4 3688 v3, XviD 1.0.3, 3ivx D4 4.5.1, OpenDivX 0.3
| Different versions of DivX was also compared. The Xvid results may be erroneous, as deblocking was disabled for it while used for DivX.
|-
| [http://www.compression.ru/video/codec_comparison/subjective_codecs_comparison_en.html Subjective Comparison of Modern Video Codecs]
| Scientifically accurate '''subjective''' comparison using 50 experts and SAMVIQ methodology
|
* 2006 Feb.
| DivX 6.0, Xvid 1.1.0, x264, WMV 9.0 (2 bitrates for every codec)
| PSNR via VQM via SSIM comparison was also done
|-
| [http://www.compression.ru/video/codec_comparison/mpeg-2_2006_en.html  MPEG-2 Video Decoders Comparison]
| '''Objective''' MPEG-2 '''Decoders''' comparison
|
* 2006 May.
| bitcontrol MPEG-2 Video Decoder, DScaler MPEG2 Video Decoder, Elecard MPEG-2 Video Decoder, ffdshow MPEG-4 Video Decoder (libavcodec), InterVideo Video Decoder, Ligos MPEG Video Decoder, MainConcept MPEG Video Decoder, Pinnacle MPEG-2 Decoder
| Objectly tested (100 times per stream) decoders "crash test" (test on damaged stream ? like scratched DVD or satellite samples)
|-
| [http://people.csail.mit.edu/tbuehler/video/codecs/ Codecs comparison]
| Personal '''subjective''' opinion
|
* 2003 Nov.
| 3ivx, Avid AVI 2.02, Cinepak, DivX 3.11, DivX 4.12, DivX 5.0.2, DV, Huffyuv, Indeo 3.2, Indeo 4.4, Indeo 5.10, Microsoft MPEG-4 v1, Microsoft MPEG-4 v2, Microsoft RLE, Microsoft Video 1, XviD, 3ivx, Animation, Blackmagic 10-bit, Blackmagic 8-bit, Cinepak, DV, H.261, H.263, Motion-JPEG, MPEG-4 Video, PNG, Sorenson Video, Sorenson Video 3
| Sometimes comparison is short (up to one text line per codec)
|-
| [http://etill.net/projects/dirac_theora_evaluation/ Evaluation of Dirac and Theora]
| Scientific paper
|
* 2009 Mar.
| Dirac, Dirac Pro, Theora I, H.264, Motion JPEG2000 (the tested codecs are from Q2-2008)
| Quite detailed comparison of software available in Q2-2008; However, a buggy version of ffmpeg2Theora was used
|-
| [http://web.archive.org/web/20110719095845/http://www.tkn.tu-berlin.de/research/evalvid/EvalVid/vp8_versus_x264.html VP8 versus x264]
| Objective and subjective quality comparison of VP8 and x264
|
* 2010 Jun.
| VP8, x264
| VQM, SSIM and PSNR for 19 CIF video clips with bitrates of 100, 200, 500 and 1000 kbit/s
|}

== See also ==
{{Portal|Free software}}
*[[Comparison of video player software|Comparison of media players]]
*[[List of video players (software)]]
*[[List of codecs]]
**[[Open source codecs and containers]]
*[[Comparison of audio codecs]]
*[[Comparison of container formats]]
* [[Comparison of video encoders]]
*[[Comparison of video editing software]]

== Notes and references ==
{{Reflist|2}}

==External links==
* [http://compression.ru/video/codec_comparison/subjective_codecs_comparison_en.html MSU Subjective Comparison of Modern Video Codecs]
* [http://www.its.bldrdoc.gov/pub/n3/video/index.php ITS - Video Quality Research]
* [http://www.students.tut.fi/~jumisko/publications/sp414%20-jumisko-pyykko.pdf Evaluation of Subjective Video Quality of Mobile Devices]

{{Compression formats}}
{{Compression Methods}}
{{Compression Software Implementations}}

{{DEFAULTSORT:Comparison Of Video Codecs}}
[[Category:Software comparisons|Video Codecs]]
[[Category:Video codecs|Video codecs]]